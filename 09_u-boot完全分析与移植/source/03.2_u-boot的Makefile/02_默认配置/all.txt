  HOSTCC  scripts/basic/fixdep
# GNU Make 4.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2014 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Sat Mar  4 20:58:10 2023

# Variables

# makefile (from 'scripts/Kbuild.include', line 75)
cc-cross-prefix = $(word 1, $(foreach c,$(1), $(shell set -e; if (which $(strip $(c))$(CC)) > /dev/null 2>&1 ; then echo $(c); fi)))
# environment
quiet = quiet_
# automatic
?F = $(notdir $?)
# automatic
<D = $(patsubst %/,%,$(dir $<))
# makefile (from 'scripts/Makefile.lib', line 426)
cmd_lzma = (cat $(filter-out FORCE,$^) | lzma -9 && $(call size_append, $(filter-out FORCE,$^))) > $@ || (rm -f $@ ; false)
# default
.SHELLFLAGS := -c
# makefile (from 'scripts/Kbuild.include', line 325)
SPL_ := 
# makefile (from 'scripts/Makefile.build', line 145)
quiet_modtag := $(subst ,,   )
# environment
PATCHLEVEL = 03
# makefile (from 'scripts/Makefile.lib', line 83)
lib-y := 
# makefile (from 'scripts/Kbuild.include', line 54)
filechk = 	$(Q)set -e; $(kecho) '  CHK     $@'; mkdir -p $(dir $@); $(filechk_$(1)) < $< > $@.tmp; if [ -r $@ ] && cmp -s $@ $@.tmp; then rm -f $@.tmp; else $(kecho) '  UPD     $@'; mv -f $@.tmp $@; fi
# makefile (from 'scripts/Makefile.build', line 190)
quiet_cmd_cc_symtypes_c = SYM $(quiet_modtag) $@
# makefile (from 'scripts/Makefile.lib', line 84)
subdir-obj-y := 
# makefile (from 'scripts/Makefile.host', line 120)
quiet_cmd_host-cxxmulti = HOSTLD  $@
# environment
OBJCOPY = arm-buildroot-linux-gnueabihf-objcopy
# makefile (from 'scripts/Makefile.lib', line 81)
obj-y := 
# makefile (from 'scripts/Makefile.build', line 206)
cmd_cc_o_c = $(CC) $(c_flags) -c -o $@ $<
# makefile (from 'scripts/Makefile.lib', line 443)
MKIMAGE := ./scripts/mkuboot.sh
# makefile (from 'scripts/Makefile.build', line 43)
subdir-ccflags-y := 
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# default
MAKE_VERSION := 4.1
# environment
UBOOTINCLUDE = 
# makefile
CURDIR := /home/book/100ask_imx6ull-sdk/Uboot-2017.03
# makefile
SHELL = /bin/sh
# environment
NM = arm-buildroot-linux-gnueabihf-nm
# environment
Q = @
# makefile (from 'scripts/Kbuild.include', line 169)
ld-version = $(shell $(LD) --version | $(srctree)/scripts/ld-version.sh)
# makefile (from 'scripts/Makefile.lib', line 482)
cmd_xzkern = (cat $(filter-out FORCE,$^) | sh $(srctree)/scripts/xz_wrap.sh && $(call size_append, $(filter-out FORCE,$^))) > $@ || (rm -f $@ ; false)
# makefile (from 'scripts/Kbuild.include', line 35)
quiet_kecho := echo
# makefile (from 'scripts/Makefile.build', line 430)
PHONY := __build  FORCE
# environment
MODVERDIR = .tmp_versions
# makefile (from 'scripts/Makefile.lib', line 332)
cmd_S_ttf = ( echo '.section .rodata.ttf.init,"a"'; echo '.balign 16'; echo '.global __ttf_$(*F)_begin'; echo '__ttf_$(*F)_begin:'; echo '.incbin "$<" '; echo '__ttf_$(*F)_end:'; echo '.global __ttf_$(*F)_end'; echo '.balign 16'; ) > $@
# environment
_ = /usr/bin/make
# makefile (from 'scripts/Makefile.build', line 405)
quiet_cmd_link_multi-m = LD [M]  $@
# makefile (from 'scripts/Makefile.lib', line 44)
subdir-m := $(subst ,, )
# makefile (from 'scripts/Makefile.lib', line 159)
a_flags = -Wp,-MD,$(depfile) $(NOSTDINC_FLAGS) $(UBOOTINCLUDE) $(__a_flags) $(modkern_aflags)
# makefile (from 'scripts/Makefile.build', line 42)
subdir-asflags-y := 
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from 'scripts/Kbuild.include', line 141)
cc-fullversion = $(shell $(CONFIG_SHELL) $(srctree)/scripts/gcc-version.sh -p $(CC))
# makefile (from 'scripts/Makefile.lib', line 366)
quiet_cmd_efi_objcopy = OBJCOPY $@
# makefile (from 'scripts/Makefile.lib', line 452)
UIMAGE_ENTRYADDR = $(UIMAGE_LOADADDR)
# makefile (from 'scripts/Makefile.lib', line 402)
size_append = printf $(shell dec_size=0; for F in $1; do fsize=$$(stat -c "%s" $$F); dec_size=$$(expr $$dec_size + $$fsize); done; printf "%08x\n" $$dec_size | sed 's/\(..\)/\1 /g' | { read ch0 ch1 ch2 ch3; for ch in $$ch3 $$ch2 $$ch1 $$ch0; do printf '%s%03o' '\\' $$((0x$$ch)); done; } )
# environment
BOARDDIR = 
# makefile (from 'scripts/Makefile.lib', line 200)
multi_depend = $(foreach m, $(notdir $1), $(eval $(obj)/$m: $(addprefix $(obj)/, $(foreach s, $3, $($(m:%$(strip $2)=%$(s)))))))
# makefile (from 'scripts/Makefile.lib', line 271)
quiet_cmd_ld = LD      $@
# makefile (from 'scripts/Makefile.lib', line 86)
real-objs-m := 
# makefile (from 'scripts/Makefile.host', line 1)
MAKEFILE_LIST :=  scripts/Makefile.build scripts/Makefile.uncmd_spl scripts/Kbuild.include scripts/basic/Makefile scripts/Makefile.lib scripts/Makefile.host
# makefile (from 'scripts/Makefile.lib', line 450)
UIMAGE_TYPE = kernel
# environment
CHECKFLAGS = -D__linux__ -Dlinux -D__STDC__ -Dunix -D__unix__ -Wbitwise -Wno-return-void -D__CHECK_ENDIAN__ 
# makefile (from 'scripts/Makefile.lib', line 113)
_cpp_flags = $(KBUILD_CPPFLAGS) $(cppflags-y) $(CPPFLAGS_$(@F))
# makefile (from 'scripts/Makefile.host', line 65)
host-cxxobjs := 
# makefile (from 'scripts/Makefile.host', line 67)
host-objdirs := 
# 'override' directive
GNUMAKEFLAGS := 
# environment
srctree = .
# environment
HOSTCC = cc
# makefile (from 'scripts/Makefile.host', line 63)
host-cobjs := 
# environment
XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
# makefile (from 'scripts/Kbuild.include', line 138)
cc-version = $(shell $(CONFIG_SHELL) $(srctree)/scripts/gcc-version.sh $(CC))
# makefile (from 'scripts/Makefile.lib', line 388)
quiet_cmd_acpi_c_asl = ASL     $<
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1001/bus
# environment
VERSION = 2017
# environment
CC = arm-buildroot-linux-gnueabihf-gcc
# makefile (from 'scripts/Makefile.lib', line 183)
dtc_cpp_flags = -Wp,-MD,$(depfile).pre.tmp -nostdinc -I$(srctree)/arch/$(ARCH)/dts -I$(srctree)/arch/$(ARCH)/dts/include -Iinclude -I$(srctree)/include -I$(srctree)/arch/$(ARCH)/include -include $(srctree)/include/linux/kconfig.h -D__ASSEMBLY__ -undef -D__DTS__
# makefile (from 'scripts/Makefile.lib', line 155)
c_flags = -Wp,-MD,$(depfile) $(NOSTDINC_FLAGS) $(UBOOTINCLUDE) $(__c_flags) $(modkern_cflags) -D"KBUILD_STR(s)=#s" $(basename_flags) $(modname_flags)
# makefile (from 'scripts/Makefile.lib', line 279)
cmd_objcopy = $(OBJCOPY) $(OBJCOPYFLAGS) $(OBJCOPYFLAGS_$(@F)) $< $@
# environment
LC_COLLATE = C
# makefile (from 'scripts/Makefile.host', line 62)
host-cmulti := 
# environment
AWK = awk
# environment
KBUILD_AFLAGS = -D__ASSEMBLY__
# makefile (from 'scripts/Makefile.build', line 312)
quiet_cmd_as_o_S = AS $(quiet_modtag)  $@
# makefile (from 'scripts/Kbuild.include', line 13)
dot-target = $(dir $@).$(notdir $@)
# makefile (from 'scripts/Makefile.lib', line 88)
multi-used-y := 
# makefile (from 'scripts/Makefile.host', line 80)
__hostc_flags = $(_hostc_flags)
# makefile (from 'scripts/Kbuild.include', line 278)
if_changed_rule = $(if $(strip $(any-prereq) $(arg-check) ), @set -e; $(rule_$(1)))
# makefile (from 'scripts/Kbuild.include', line 7)
squote := '
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# environment
CPP = arm-buildroot-linux-gnueabihf-gcc -E
# makefile (from 'scripts/Makefile.lib', line 87)
single-used-m := 
# makefile (from 'scripts/Makefile.host', line 130)
quiet_cmd_host-cxxobjs = HOSTCXX $@
# makefile (from 'scripts/Makefile.build', line 95)
_dummy := 
# makefile (from 'scripts/Kbuild.include', line 120)
cc-option-yn = $(call try-run, $(CC) -Werror $(KBUILD_CPPFLAGS) $(KBUILD_CFLAGS) $(1) -c -x c /dev/null -o "$$TMP",y,n)
# environment
SSH_CONNECTION = 192.168.37.1 57533 192.168.37.134 22
# environment
PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/book/100ask_imx6ull-sdk/ToolChain/arm-buildroot-linux-gnueabihf_sdk-buildroot/bin
# makefile (from 'scripts/Kbuild.include', line 218)
flags = $(foreach o,$($(1)),$(if $(filter -I%,$(o)),$(call addtree,$(o)),$(o)))
# environment
LD = arm-buildroot-linux-gnueabihf-ld.bfd
# environment
CPUDIR = 
# makefile (from 'scripts/Kbuild.include', line 204)
clean := -f ./scripts/Makefile.clean obj
# environment
HOSTLDFLAGS = 
# makefile (from 'scripts/Makefile.build', line 33)
EXTRA_AFLAGS := 
# makefile (from 'scripts/Kbuild.include', line 9)
space := $(subst ,, )
# environment
SSH_TTY = /dev/pts/1
# environment
XDG_RUNTIME_DIR = /run/user/1001
# makefile (from 'scripts/Kbuild.include', line 210)
hdr-inst := -f ./scripts/Makefile.headersinst obj
# makefile (from 'scripts/Makefile.lib', line 78)
always := scripts/basic/fixdep
# makefile (from 'scripts/Makefile.build', line 266)
rule_cc_o_c = 	$(call echo-cmd,checksrc) $(cmd_checksrc) $(call echo-cmd,cc_o_c) $(cmd_cc_o_c); $(cmd_modversions) $(call echo-cmd,record_mcount) $(cmd_record_mcount) scripts/basic/fixdep $(depfile) $@ '$(call make-cmd,cc_o_c)' > $(dot-target).tmp; rm -f $(depfile); mv -f $(dot-target).tmp $(dot-target).cmd
# makefile (from 'scripts/Makefile.lib', line 435)
quiet_cmd_lz4 = LZ4     $@
# environment
VENDOR = 
# makefile (from 'scripts/Makefile.lib', line 417)
quiet_cmd_bzip2 = BZIP2   $@
# makefile (from 'scripts/Makefile.host', line 103)
quiet_cmd_host-cmulti = HOSTLD  $@
# makefile (from 'scripts/Kbuild.include', line 90)
try-run = $(shell set -e; TMP="$(TMPOUT).$$$$.tmp"; TMPO="$(TMPOUT).$$$$.o"; TMPSU="$(TMPOUT).$$$$.su"; if ($(1)) >/dev/null 2>&1; then echo "$(2)"; else echo "$(3)"; fi; rm -f "$$TMP" "$$TMPO" "$$TMPSU")
# makefile (from 'scripts/Makefile.build', line 402)
quiet_cmd_link_multi-y = LD      $@
# makefile (from 'scripts/Kbuild.include', line 5)
comma := ,
# makefile (from 'scripts/Kbuild.include', line 258)
any-prereq = $(filter-out $(PHONY),$?) $(filter-out $(PHONY) $(wildcard $^),$^)
# environment
KBUILD_BUILTIN = 1
# environment
VPATH = .
# makefile (from 'scripts/Makefile.build', line 290)
quiet_cmd_cc_lst_c = MKLST   $@
# environment
AR = arm-buildroot-linux-gnueabihf-ar
# makefile (from 'scripts/Makefile.build', line 324)
cmd_cpp_lds_S = $(CPP) $(cpp_flags) -P -C -U$(ARCH) -D__ASSEMBLY__ -DLINKER_SCRIPT -o $@ $<
# environment
LC_NUMERIC = C
# makefile (from 'scripts/Kbuild.include', line 165)
ar-option = $(call try-run, $(AR) rc$(1) "$$TMP",$(1),$(2))
# makefile (from 'scripts/Makefile.lib', line 141)
__a_flags = $(_a_flags)
# environment
LDFLAGS = 
# makefile (from 'scripts/Kbuild.include', line 186)
build := -f ./scripts/Makefile.build obj
# makefile (from 'scripts/Makefile.build', line 291)
cmd_cc_lst_c = $(CC) $(c_flags) -g -c -o $*.o $< && $(CONFIG_SHELL) $(srctree)/scripts/makelst $*.o System.map $(OBJDUMP) > $@
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# makefile (from 'scripts/Makefile.lib', line 103)
basename_flags = -D"KBUILD_BASENAME=KBUILD_STR($(call name-fix,$(basetarget)))"
# environment
objtree = .
# makefile (from 'scripts/Kbuild.include', line 130)
cc-disable-warning = $(call try-run, $(CC) $(KBUILD_CPPFLAGS) $(KBUILD_CFLAGS) -W$(strip $(1)) -c -x c /dev/null -o "$$TMP",-Wno-$(strip $(1)))
# environment
LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
# environment
SUBLEVEL = 
# makefile (from 'scripts/Makefile.lib', line 112)
_a_flags = $(filter-out $(AFLAGS_REMOVE_$(basetarget).o), $(orig_a_flags))
# makefile (from 'scripts/Makefile.build', line 183)
cmd_gensymtypes = $(CPP) -D__GENKSYMS__ $(c_flags) $< | $(GENKSYMS) $(if $(1), -T $(2)) $(patsubst y,-s _,$(CONFIG_HAVE_UNDERSCORE_SYMBOL_PREFIX)) $(if $(KBUILD_PRESERVE),-p) -r $(firstword $(wildcard $(2:.symtypes=.symref) /dev/null))
# automatic
%F = $(notdir $%)
# makefile (from 'scripts/Makefile.lib', line 309)
quiet_cmd_dtc = DTC     $@
# environment
DISPLAY = localhost:10.0
# makefile (from 'scripts/Makefile.lib', line 324)
dtc-tmp = $(subst $(comma),_,$(dot-target).dts.tmp)
# makefile (from 'scripts/Makefile.lib', line 170)
u_boot_dtsi_options = $(wildcard $(dts_dir)/$(basename $(notdir $<))-u-boot.dtsi) $(wildcard $(dts_dir)/$(subst $\",,$(CONFIG_SYS_SOC))-u-boot.dtsi) $(wildcard $(dts_dir)/$(subst $\",,$(CONFIG_SYS_CPU))-u-boot.dtsi) $(wildcard $(dts_dir)/$(subst $\",,$(CONFIG_SYS_VENDOR))-u-boot.dtsi) $(wildcard $(dts_dir)/u-boot.dtsi)
# makefile (from 'scripts/Makefile.lib', line 13)
KBUILD_SUBDIR_CCFLAGS := $(subst ,, )
# makefile (from 'scripts/Makefile.lib', line 162)
cpp_flags = -Wp,-MD,$(depfile) $(NOSTDINC_FLAGS) $(UBOOTINCLUDE) $(__cpp_flags)
# environment
KBUILD_MODULES = 
# makefile (from 'scripts/Makefile.lib', line 487)
quiet_cmd_xzmisc = XZMISC  $@
# makefile (from 'scripts/Makefile.lib', line 374)
quiet_cmd_efi_ld = LD      $@
# environment
HOSTCXX = c++
# makefile (from 'scripts/Makefile.build', line 332)
quiet_cmd_asn1_compiler = ASN.1   $@
# makefile (from 'scripts/Makefile.build', line 191)
cmd_cc_symtypes_c = set -e; $(call cmd_gensymtypes,true,$@) >/dev/null; test -s $@ || rm -f $@
# makefile (from 'scripts/Makefile.build', line 15)
prefix := .
# makefile (from 'scripts/Makefile.host', line 121)
cmd_host-cxxmulti = $(HOSTCXX) $(HOSTLDFLAGS) -o $@ $(foreach o,objs cxxobjs, $(addprefix $(obj)/,$($(@F)-$(o)))) $(HOST_LOADLIBES) $(HOSTLOADLIBES_$(@F))
# makefile (from 'scripts/Makefile.build', line 369)
modorder-cmds = $(foreach m, $(modorder), $(if $(filter %/modules.order, $m), cat $m;, echo kernel/$m;))
# makefile (from 'scripts/Makefile.lib', line 77)
extra-y := 
# makefile (from 'scripts/Makefile.lib', line 284)
quiet_cmd_gzip = GZIP    $@
# environment
PWD = /home/book/100ask_imx6ull-sdk/Uboot-2017.03
# makefile (from 'scripts/Kbuild.include', line 154)
cc-ldoption = $(call try-run, $(CC) $(1) -nostdlib -x c /dev/null -o "$$TMP",$(1),$(2))
# makefile (from 'scripts/Makefile.build', line 171)
quiet_cmd_cc_s_c = CC $(quiet_modtag)  $@
# makefile (from 'scripts/Kbuild.include', line 177)
dtc-option = $(call try-run, echo '/dts-v1/; / {};' | $(DTC) $(1),$(1),$(2))
# environment
OBJCOPYFLAGS = 
# makefile (from 'scripts/Makefile.build', line 13)
src := scripts/basic
# makefile (from 'scripts/Makefile.lib', line 430)
quiet_cmd_lzo = LZO     $@
# automatic
*D = $(patsubst %/,%,$(dir $*))
# makefile (from 'scripts/Makefile.lib', line 448)
UIMAGE_COMPRESSION = $(if $(2),$(2),none)
# makefile (from 'scripts/Makefile.build', line 160)
modname = $(basetarget)
# makefile (from 'scripts/basic/Makefile', line 14)
hostprogs-y := fixdep
# makefile (from 'scripts/Makefile.build', line 36)
EXTRA_LDFLAGS := 
# makefile (from 'scripts/Makefile.lib', line 91)
multi-objs-m := 
# environment
PYTHON = python
# makefile (from 'scripts/Makefile.lib', line 62)
multi-objs := $(subst ,, )
# makefile (from 'scripts/Makefile.build', line 313)
cmd_as_o_S = $(CC) $(a_flags) -c -o $@ $<
# makefile (from 'scripts/Makefile.lib', line 367)
cmd_efi_objcopy = $(OBJCOPY) -j .header -j .text -j .sdata -j .data -j .dynamic -j .dynsym  -j .rel* -j .rela* -j .reloc $(if $(EFI_TARGET),$(EFI_TARGET),-O binary) $^ $@
# environment
HOME = /home/book
# environment
UBOOTRELEASE = 
# makefile (from 'scripts/Makefile.host', line 113)
quiet_cmd_host-cobjs = HOSTCC  $@
# makefile (from 'scripts/Kbuild.include', line 109)
as-instr = $(call try-run, printf "%b\n" "$(1)" | $(CC) $(KBUILD_AFLAGS) -c -x assembler -o "$$TMP" -,$(2),$(3))
# makefile (from 'scripts/Kbuild.include', line 192)
modbuiltin := -f ./scripts/Makefile.modbuiltin obj
# makefile (from 'scripts/Makefile.lib', line 140)
__c_flags = $(_c_flags)
# makefile (from 'scripts/Makefile.lib', line 272)
cmd_ld = $(LD) $(LDFLAGS) $(ldflags-y) $(LDFLAGS_$(@F)) $(filter-out FORCE,$^) -o $@
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# makefile (from 'scripts/Makefile.lib', line 107)
orig_c_flags = $(KBUILD_CPPFLAGS) $(KBUILD_CFLAGS) $(KBUILD_SUBDIR_CCFLAGS) $(ccflags-y) $(CFLAGS_$(basetarget).o)
# makefile (from 'scripts/Kbuild.include', line 135)
cc-name = $(shell $(CC) -v 2>&1 | grep -q "clang version" && echo clang || echo gcc)
# automatic
-*-command-variables-*- := obj=scripts/basic
# environment
LOGNAME = book
# makefile (from 'scripts/Kbuild.include', line 149)
binutils-version = $(shell $(CONFIG_SHELL) $(srctree)/scripts/binutils-version.sh $(AS))
# makefile (from 'scripts/Makefile.host', line 74)
_hostc_flags = $(HOSTCFLAGS)   $(HOST_EXTRACFLAGS) $(HOSTCFLAGS_$(basetarget).o)
# automatic
+F = $(notdir $+)
# makefile (from 'scripts/Kbuild.include', line 125)
cc-option-align = $(subst -functions=0,, $(call cc-option,-falign-functions=0,-malign-functions=0))
# makefile (from 'scripts/Makefile.build', line 28)
lib-m := 
# makefile (from 'scripts/Makefile.lib', line 167)
dts_dir = $(srctree)/arch/$(ARCH)/dts
# makefile (from 'scripts/Makefile.build', line 58)
kbuild-file := ./scripts/basic/Makefile
# environment
LDR = arm-buildroot-linux-gnueabihf-ldr
# makefile (from 'scripts/Makefile.lib', line 389)
cmd_acpi_c_asl = $(CPP) -x assembler-with-cpp -D__ASSEMBLY__ -P $(UBOOTINCLUDE) -o $<.tmp $<; iasl -p $< -tc $<.tmp $(if $(KBUILD_VERBOSE:1=), >/dev/null); mv $(patsubst %.asl,%.hex,$<) $@
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
KBUILD_VERBOSE = 0
# command line
obj = scripts/basic
# makefile (from 'scripts/Makefile.lib', line 82)
obj-m := 
# makefile (from 'scripts/Makefile.lib', line 104)
modname_flags = $(if $(filter 1,$(words $(modname))), -D"KBUILD_MODNAME=KBUILD_STR($(call name-fix,$(modname)))")
# makefile (from 'scripts/Makefile.host', line 61)
host-csingle := scripts/basic/fixdep
# makefile (from 'scripts/Makefile.host', line 69)
obj-dirs := $(subst ,, )
# environment
MAKELEVEL := 1
# makefile (from 'scripts/Makefile.build', line 178)
cmd_cc_i_c = $(CPP) $(c_flags)   -o $@ $<
# environment
MAKE = make
# makefile (from 'scripts/Makefile.build', line 112)
modorder-target := scripts/basic/modules.order
# environment
DTC_FLAGS = 
# environment
KCONFIG_CONFIG = .config
# makefile (from 'scripts/Makefile.lib', line 454)
UIMAGE_IN = $<
# environment
SHLVL = 1
# makefile (from 'scripts/Makefile.build', line 323)
quiet_cmd_cpp_lds_S = LDS     $@
# makefile (from 'scripts/Makefile.lib', line 80)
modorder := 
# environment
KBUILD_DEFCONFIG = sandbox_defconfig
# makefile (from 'scripts/Makefile.lib', line 252)
cmd_shipped = cat $< > $@
# makefile (from 'scripts/Kbuild.include', line 36)
silent_kecho := :
# makefile (from 'scripts/Makefile.host', line 66)
host-shared := scripts/basic/)
# makefile (from 'scripts/Makefile.build', line 177)
quiet_cmd_cc_i_c = CPP $(quiet_modtag) $@
# environment
AS = arm-buildroot-linux-gnueabihf-as
# makefile (from 'scripts/Makefile.build', line 333)
cmd_asn1_compiler = $(objtree)/scripts/asn1_compiler $< $(subst .h,.c,$@) $(subst .c,.h,$@)
# makefile (from 'scripts/Makefile.host', line 131)
cmd_host-cxxobjs = $(HOSTCXX) $(hostcxx_flags) -c -o $@ $<
# environment
MAKEOVERRIDES = ${-*-command-variables-*-}
# makefile (from 'scripts/Makefile.lib', line 449)
UIMAGE_OPTS-y = 
# makefile (from 'scripts/Makefile.lib', line 92)
subdir-ym := 
# environment
XDG_SESSION_ID = 64
# environment
USER = book
# makefile (from 'scripts/Makefile.lib', line 42)
subdir-y := $(subst ,, )
# environment
CHECK = sparse
# makefile
.DEFAULT_GOAL := __build
# makefile (from 'scripts/Makefile.lib', line 453)
UIMAGE_NAME = 'Linux-$(KERNELRELEASE)'
# makefile (from 'scripts/Kbuild.include', line 268)
if_changed_dep = $(if $(strip $(any-prereq) $(arg-check) ), @set -e; $(echo-cmd) $(cmd_$(1)); scripts/basic/fixdep $(depfile) $@ '$(make-cmd)' > $(dot-target).tmp; rm -f $(depfile); mv -f $(dot-target).tmp $(dot-target).cmd)
# makefile (from 'scripts/Makefile.lib', line 194)
modname-multi = $(sort $(foreach m,$(multi-used), $(if $(filter $(subst $(obj)/,,$*.o), $($(m:.o=-objs)) $($(m:.o=-y))),$(m:.o=))))
# environment
RCS_TAR_IGNORE = --exclude SCCS --exclude BitKeeper --exclude .svn --exclude CVS --exclude .pc --exclude .hg --exclude .git
# makefile (from 'scripts/Makefile.lib', line 85)
real-objs-y := 
# makefile (from 'scripts/Makefile.lib', line 425)
quiet_cmd_lzma = LZMA    $@
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from 'scripts/Makefile.lib', line 294)
cmd_dt_S_dtb = ( echo '.section .dtb.init.rodata,"a"'; echo '.balign 16'; echo '.global __dtb_$(subst -,_,$(*F))_begin'; echo '__dtb_$(subst -,_,$(*F))_begin:'; echo '.incbin "$<" '; echo '__dtb_$(subst -,_,$(*F))_end:'; echo '.global __dtb_$(subst -,_,$(*F))_end'; echo '.balign 16'; ) > $@
# makefile (from 'scripts/Makefile.lib', line 330)
quiet_cmd_S_ttf = TTF     $@
# environment
CPU = 
# makefile (from 'scripts/Makefile.host', line 88)
hostcxx_flags = -Wp,-MD,$(depfile) $(__hostcxx_flags)
# makefile (from 'scripts/Kbuild.include', line 159)
ld-option = $(call try-run, $(CC) -x c /dev/null -c -o "$$TMPO" ; $(LD) $(1) "$$TMPO" -o "$$TMP",$(1),$(2))
# makefile (from 'scripts/Makefile.build', line 141)
modkern_cflags = $(if $(part-of-module), $(KBUILD_CFLAGS_MODULE) $(CFLAGS_MODULE), $(KBUILD_CFLAGS_KERNEL) $(CFLAGS_KERNEL))
# makefile (from 'scripts/Makefile.lib', line 436)
cmd_lz4 = (cat $(filter-out FORCE,$^) | lz4c -l -c1 stdin stdout && $(call size_append, $(filter-out FORCE,$^))) > $@ || (rm -f $@ ; false)
# makefile (from 'scripts/Makefile.lib', line 180)
u_boot_dtsi = $(firstword $(u_boot_dtsi_options))
# makefile (from 'scripts/Makefile.lib', line 418)
cmd_bzip2 = (cat $(filter-out FORCE,$^) | bzip2 -9 && $(call size_append, $(filter-out FORCE,$^))) > $@ || (rm -f $@ ; false)
# makefile (from 'scripts/Makefile.host', line 104)
cmd_host-cmulti = $(HOSTCC) $(HOSTLDFLAGS) -o $@ $(addprefix $(obj)/,$($(@F)-objs)) $(HOST_LOADLIBES) $(HOSTLOADLIBES_$(@F))
# environment
HOSTCFLAGS = -Wall -Wstrict-prototypes -O2 -fomit-frame-pointer 
# makefile (from 'scripts/Makefile.build', line 439)
targets := 
# default
MAKE_COMMAND := make
# environment
OLDPWD = /home/book/100ask_imx6ull-sdk
# environment
NOSTDINC_FLAGS = 
# makefile (from 'scripts/Makefile.lib', line 55)
multi-used := $(subst ,, )
# default
.VARIABLES := 
# makefile (from 'scripts/Makefile.build', line 203)
quiet_cmd_cc_o_c = CC $(quiet_modtag)  $@
# makefile (from 'scripts/Kbuild.include', line 222)
echo-cmd = $(if $($(quiet)cmd_$(1)), echo '  $(call escsq,$($(quiet)cmd_$(1)))$(echo-why)';)
# makefile (from 'scripts/Makefile.lib', line 89)
multi-used-m := 
# automatic
*F = $(notdir $*)
# makefile (from 'scripts/Makefile.lib', line 8)
ldflags-y := $(subst ,, )
# makefile (from 'scripts/Kbuild.include', line 18)
depfile = $(subst $(comma),_,$(dot-target).d)
# environment
KBUILD_KCONFIG = 
# makefile (from 'scripts/Makefile.lib', line 5)
asflags-y := $(subst ,,  )
# makefile (from 'scripts/Kbuild.include', line 173)
ld-ifversion = $(shell [ $(ld-version) $(1) $(2) ] && echo $(3) || echo $(4))
# makefile (from 'scripts/Kbuild.include', line 254)
make-cmd = $(call escsq,$(subst #,\#,$(subst $$,$$$$,$(cmd_$(1)))))
# environment
ARCH = arm
# makefile
MAKEFLAGS = prR -I/home/book/100ask_imx6ull-sdk/Uboot-2017.03 --no-print-directory -- $(MAKEOVERRIDES)
# makefile (from 'scripts/Makefile.lib', line 6)
ccflags-y := $(subst ,,  )
# makefile (from 'scripts/Makefile.lib', line 292)
quiet_cmd_dt_S_dtb = DTB     $@
# environment
MFLAGS = -prR -I/home/book/100ask_imx6ull-sdk/Uboot-2017.03 --no-print-directory
# environment
SSH_CLIENT = 192.168.37.1 57533 22
# makefile (from 'scripts/Kbuild.include', line 103)
as-option = $(call try-run, $(CC) $(KBUILD_CFLAGS) $(1) -c -x assembler /dev/null -o "$$TMP",$(1),$(2))
# environment
MAIL = /var/mail/book
# environment
HOSTCXXFLAGS = -O2
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from 'scripts/Kbuild.include', line 115)
cc-option = $(call try-run, $(CC) -Werror $(KBUILD_CPPFLAGS) $(KBUILD_CFLAGS) $(1) -c -x c /dev/null -o "$$TMP",$(1),$(2))
# environment
SOC = 
# environment
OBJDUMP = arm-buildroot-linux-gnueabihf-objdump
# makefile (from 'scripts/Makefile.lib', line 142)
__cpp_flags = $(_cpp_flags)
# makefile (from 'scripts/Makefile.lib', line 457)
quiet_cmd_uimage = UIMAGE  $(UIMAGE_OUT)
# makefile (from 'scripts/Makefile.lib', line 312)
cmd_dtc = mkdir -p $(dir ${dtc-tmp}) ; cat $< $(if $(u_boot_dtsi), | sed '/^\/ {$$/{x;s%$$%#include \"$(u_boot_dtsi)\"%;G;}') | $(CPP) $(dtc_cpp_flags) -x assembler-with-cpp -o $(dtc-tmp) - ; $(DTC) -O dtb -o $@ -b 0 -i $(dir $<) $(DTC_FLAGS) -d $(depfile).dtc.tmp $(dtc-tmp) ; cat $(depfile).pre.tmp $(depfile).dtc.tmp > $(depfile)
# environment
BOARD = 
# makefile (from 'scripts/Makefile.host', line 60)
__hostprogs := scripts/basic/fixdep
# makefile (from 'scripts/Makefile.host', line 87)
hostc_flags = -Wp,-MD,$(depfile) $(__hostc_flags)
# makefile (from 'scripts/Kbuild.include', line 229)
objectify = $(foreach o,$(1),$(if $(filter /%,$(o)),$(o),$(obj)/$(o)))
# makefile (from 'scripts/Makefile.build', line 54)
save-cflags := 
# makefile (from 'scripts/Makefile.build', line 307)
cmd_as_s_S = $(CPP) $(a_flags)   -o $@ $<
# makefile (from 'scripts/Makefile.lib', line 488)
cmd_xzmisc = (cat $(filter-out FORCE,$^) | xz --check=crc32 --lzma2=dict=1MiB) > $@ || (rm -f $@ ; false)
# makefile (from 'scripts/Makefile.lib', line 375)
cmd_efi_ld = $(LD) -nostdlib -znocombreloc -T $(EFI_LDS_PATH) -shared -Bsymbolic $^ -o $@
# environment
STRIP = arm-buildroot-linux-gnueabihf-strip
# makefile (from 'scripts/Makefile.lib', line 496)
MKIMAGEOUTPUT = /dev/null
# environment
DTC = dtc
# makefile (from 'scripts/Kbuild.include', line 198)
dtbinst := -f scripts/Makefile.dtbinst obj
# environment
CROSS_COMPILE = arm-buildroot-linux-gnueabihf-
# makefile (from 'scripts/Makefile.build', line 397)
link_multi_deps = $(filter $(addprefix $(obj)/, $($(subst $(obj)/,,$(@:.o=-objs))) $($(subst $(obj)/,,$(@:.o=-y)))), $^)
# makefile (from 'scripts/Makefile.lib', line 285)
cmd_gzip = (cat $(filter-out FORCE,$^) | gzip -n -f -9 > $@) || (rm -f $@ ; false)
# makefile (from 'scripts/Kbuild.include', line 146)
cc-ifversion = $(shell [ $(cc-version) $(1) $(2) ] && echo $(3) || echo $(4))
# environment
HOSTARCH = x86_64
# makefile (from 'scripts/Kbuild.include', line 30)
escsq = $(subst $(squote),'\$(squote)',$1)
# makefile (from 'scripts/Makefile.host', line 81)
__hostcxx_flags = $(_hostcxx_flags)
# makefile (from 'scripts/Makefile.build', line 172)
cmd_cc_s_c = $(CC) $(c_flags) $(DISABLE_LTO) -fverbose-asm -S -o $@ $<
# makefile (from 'scripts/Kbuild.include', line 226)
cmd = @$(echo-cmd) $(cmd_$(1))
# default
MAKEFILES := 
# makefile (from 'scripts/Makefile.build', line 403)
cmd_link_multi-y = $(LD) $(ld_flags) -r -o $@ $(link_multi_deps) $(cmd_secanalysis)
# makefile (from 'scripts/Makefile.lib', line 431)
cmd_lzo = (cat $(filter-out FORCE,$^) | lzop -9 && $(call size_append, $(filter-out FORCE,$^))) > $@ || (rm -f $@ ; false)
# environment
KBUILD_SRC = 
# environment
CONFIG_SHELL = /bin/bash
# makefile (from 'scripts/Makefile.lib', line 12)
KBUILD_SUBDIR_ASFLAGS := $(subst ,, )
# automatic
<F = $(notdir $<)
# makefile (from 'scripts/Makefile.lib', line 251)
quiet_cmd_shipped = SHIPPED $@
# makefile (from 'scripts/Makefile.build', line 301)
modkern_aflags := $(subst ,, )
# makefile (from 'scripts/Makefile.lib', line 278)
quiet_cmd_objcopy = OBJCOPY $@
# makefile (from 'scripts/Makefile.lib', line 458)
cmd_uimage = $(CONFIG_SHELL) $(MKIMAGE) -A $(UIMAGE_ARCH) -O linux -C $(UIMAGE_COMPRESSION) $(UIMAGE_OPTS-y) -T $(UIMAGE_TYPE) -a $(UIMAGE_LOADADDR) -e $(UIMAGE_ENTRYADDR) -n $(UIMAGE_NAME) -d $(UIMAGE_IN) $(UIMAGE_OUT)
# makefile (from 'scripts/Makefile.lib', line 351)
cmd_S_efi = ( echo '.section .rodata.efi.init,"a"'; echo '.balign 16'; echo '.global __efi_hello_world_begin'; echo '__efi_hello_world_begin:'; echo '.incbin "$<" '; echo '__efi_hello_world_end:'; echo '.global __efi_hello_world_end'; echo '.balign 16'; ) > $@
# environment
HOSTOS = linux
# environment
KBUILD_CPPFLAGS = -D__KERNEL__ -D__UBOOT__
# makefile (from 'scripts/Makefile.lib', line 43)
__subdir-m := 
# makefile (from 'scripts/Makefile.host', line 114)
cmd_host-cobjs = $(HOSTCC) $(hostc_flags) -c -o $@ $<
# environment
PERL = perl
# makefile (from 'scripts/Makefile.build', line 306)
quiet_cmd_as_s_S = CPP $(quiet_modtag) $@
# makefile (from 'scripts/Makefile.lib', line 498)
cmd_mkimage = $(objtree)/tools/mkimage $(MKIMAGEFLAGS_$(@F)) -d $< $@ $(if $(KBUILD_VERBOSE:1=), >$(MKIMAGEOUTPUT))
# makefile (from 'scripts/Kbuild.include', line 150)
dtc-version = $(shell $(CONFIG_SHELL) $(srctree)/scripts/dtc-version.sh $(DTC))
# makefile (from 'scripts/Makefile.lib', line 497)
quiet_cmd_mkimage = MKIMAGE $@
# makefile (from 'scripts/Makefile.lib', line 455)
UIMAGE_OUT = $@
# makefile (from 'scripts/Kbuild.include', line 242)
arg-check = $(strip $(filter-out $(cmd_$(1)), $(cmd_$@)) $(filter-out $(cmd_$@),   $(cmd_$(1))) )
# makefile (from 'scripts/Makefile.lib', line 165)
ld_flags = $(LDFLAGS) $(ldflags-y)
# makefile (from 'scripts/Makefile.lib', line 102)
name-fix = $(subst $(comma),_,$(subst -,_,$1))
# environment
KBUILD_CFLAGS = -Wall -Wstrict-prototypes -Wno-format-security -fno-builtin -ffreestanding
# environment
RCS_FIND_IGNORE = \( -name SCCS -o -name BitKeeper -o -name .svn -o -name CVS -o -name .pc -o -name .hg -o -name .git \) -prune -o
# makefile (from 'scripts/Makefile.host', line 95)
quiet_cmd_host-csingle = HOSTCC  $@
# makefile (from 'scripts/Kbuild.include', line 22)
basetarget = $(basename $(notdir $@))
# automatic
^F = $(notdir $^)
# makefile (from 'scripts/Makefile.build', line 57)
kbuild-dir := ./scripts/basic
# makefile (from 'scripts/Makefile.lib', line 447)
UIMAGE_ARCH = $(SRCARCH)
# default
SUFFIXES := 
# makefile (from 'scripts/Kbuild.include', line 262)
if_changed = $(if $(strip $(any-prereq) $(arg-check)), @set -e; $(echo-cmd) $(cmd_$(1)); printf '%s\n' 'cmd_$@ := $(make-cmd)' > $(dot-target).cmd)
# makefile (from 'scripts/Makefile.build', line 406)
cmd_link_multi-m = $(cmd_link_multi-y)
# makefile (from 'scripts/Kbuild.include', line 26)
baseprereq = $(basename $(notdir $<))
# makefile (from 'scripts/Makefile.build', line 35)
EXTRA_CPPFLAGS := 
# makefile (from 'scripts/Kbuild.include', line 214)
addtree = $(if $(patsubst -I%,%,$(1)), $(if $(filter-out -I/%,$(1)),$(patsubst -I%,-I$(srctree)/%,$(1))) $(1))
# makefile (from 'scripts/Makefile.build', line 440)
cmd_files := 
# makefile (from 'scripts/Makefile.host', line 76)
_hostcxx_flags = $(HOSTCXXFLAGS) $(HOST_EXTRACXXFLAGS) $(HOSTCXXFLAGS_$(basetarget).o)
# makefile (from 'scripts/Makefile.lib', line 41)
__subdir-y := 
# default
.INCLUDE_DIRS = /home/book/100ask_imx6ull-sdk/Uboot-2017.03 /usr/include /usr/local/include /usr/include
# makefile (from 'scripts/Makefile.lib', line 481)
quiet_cmd_xzkern = XZKERN  $@
# makefile (from 'scripts/Makefile.lib', line 109)
_c_flags = $(filter-out $(CFLAGS_REMOVE_$(basetarget).o), $(orig_c_flags))
# makefile (from 'scripts/Makefile.lib', line 110)
orig_a_flags = $(KBUILD_CPPFLAGS) $(KBUILD_AFLAGS) $(KBUILD_SUBDIR_ASFLAGS) $(asflags-y) $(AFLAGS_$(basetarget).o)
# makefile (from 'scripts/Makefile.lib', line 378)
EFI_LDS_PATH = $(srctree)/arch/$(ARCH)/lib/$(EFI_LDS)
# environment
KBUILD_EXTMOD = 
# environment
KBUILD_CHECKSRC = 0
# default
.RECIPEPREFIX := 
# environment
MAKE_TERMERR = /dev/pts/1
# makefile (from 'scripts/Makefile.build', line 34)
EXTRA_CFLAGS := 
# makefile (from 'scripts/Kbuild.include', line 83)
TMPOUT := 
# default
MAKE_HOST := x86_64-pc-linux-gnu
# makefile (from 'scripts/Makefile.host', line 64)
host-cxxmulti := 
# makefile (from 'scripts/Makefile.lib', line 7)
cppflags-y := $(subst ,,  )
# makefile (from 'scripts/Makefile.host', line 96)
cmd_host-csingle = $(HOSTCC) $(hostc_flags) -o $@ $< $(HOST_LOADLIBES) $(HOSTLOADLIBES_$(@F))
# environment
LANG = en_US.UTF-8
# environment
TERM = xterm
# makefile (from 'scripts/Makefile.lib', line 90)
multi-objs-y := 
# makefile (from 'scripts/Kbuild.include', line 8)
empty := 
# makefile (from 'scripts/Kbuild.include', line 6)
quote := "
# environment
UBOOTVERSION = 2017.03
# makefile (from 'scripts/Kbuild.include', line 37)
kecho := echo
# makefile (from 'scripts/Makefile.lib', line 451)
UIMAGE_LOADADDR = arch_must_set_this
# variable set hash-table stats:
# Load=347/1024=34%, Rehash=0, Collisions=162/872=19%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# scripts/basic (device 2052, inode 5639601): 5 files, 2 impossibilities.

# 5 files, 2 impossibilities in 1 directories.

# Implicit Rules

scripts/basic/%: scripts/basic/%_shipped
#  recipe to execute (from 'scripts/Makefile.lib', line 255):
	$(call cmd,shipped)

scripts/basic/%.dtb.S: scripts/basic/%.dtb
#  recipe to execute (from 'scripts/Makefile.lib', line 307):
	$(call cmd,dt_S_dtb)

scripts/basic/%.dtb: scripts/basic/%.dts FORCE
#  recipe to execute (from 'scripts/Makefile.lib', line 322):
	$(call if_changed_dep,dtc)

scripts/basic/%.S: scripts/basic/%.ttf
#  recipe to execute (from 'scripts/Makefile.lib', line 345):
	$(call cmd,S_ttf)

scripts/basic/%_efi.S: scripts/basic/%.efi
#  recipe to execute (from 'scripts/Makefile.lib', line 364):
	$(call cmd,S_efi)

scripts/basic/%.efi: scripts/basic/%.so
#  recipe to execute (from 'scripts/Makefile.lib', line 372):
	$(call cmd,efi_objcopy)

scripts/basic/%.s: scripts/basic/%.c FORCE
#  recipe to execute (from 'scripts/Makefile.build', line 175):
	$(call if_changed_dep,cc_s_c)

scripts/basic/%.i: scripts/basic/%.c FORCE
#  recipe to execute (from 'scripts/Makefile.build', line 181):
	$(call if_changed_dep,cc_i_c)

scripts/basic/%.symtypes: scripts/basic/%.c FORCE
#  recipe to execute (from 'scripts/Makefile.build', line 197):
	$(call cmd,cc_symtypes_c)

scripts/basic/%.o: scripts/basic/%.c FORCE
#  recipe to execute (from 'scripts/Makefile.build', line 280):
	$(call cmd,force_checksrc)
	$(call if_changed_rule,cc_o_c)

scripts/basic/%.lst: scripts/basic/%.c FORCE
#  recipe to execute (from 'scripts/Makefile.build', line 296):
	$(call if_changed_dep,cc_lst_c)

scripts/basic/%.s: scripts/basic/%.S FORCE
#  recipe to execute (from 'scripts/Makefile.build', line 310):
	$(call if_changed_dep,as_s_S)

scripts/basic/%.o: scripts/basic/%.S FORCE
#  recipe to execute (from 'scripts/Makefile.build', line 316):
	$(call if_changed_dep,as_o_S)

scripts/basic/%.lds: scripts/basic/%.lds.S FORCE
#  recipe to execute (from 'scripts/Makefile.build', line 328):
	$(call if_changed_dep,cpp_lds_S)

scripts/basic/%-asn1.c scripts/basic/%-asn1.h: scripts/basic/%.asn1 scripts/asn1_compiler
#  recipe to execute (from 'scripts/Makefile.build', line 339):
	$(call cmd,asn1_compiler)

# 15 implicit rules, 0 (0.0%) terminal.

# Files

FORCE:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Successfully updated.

.PHONY: __build FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

.PRECIOUS: scripts/basic/%-asn1.c scripts/basic/%-asn1.h
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
scripts/Makefile.uncmd_spl:
#  Implicit rule search has been done.
#  Last modified 2022-10-20 00:04:21.174114669
#  File has been updated.
#  Successfully updated.

# Not a target:
scripts/basic/fixdep.c:
#  Implicit rule search has been done.
#  Last modified 2022-10-20 00:04:21.174114669
#  File has been updated.
#  Successfully updated.

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
scripts/basic/dsdt.asl:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

scripts/basic/modules.order: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'scripts/Makefile.build', line 375):
	$(Q)(cat /dev/null; $(modorder-cmds)) > $@

# Not a target:
scripts/basic/%-asn1.c:
#  Precious file (prerequisite of .PRECIOUS).
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
scripts/Makefile.host:
#  Implicit rule search has been done.
#  Last modified 2022-10-20 00:04:21.174114669
#  File has been updated.
#  Successfully updated.

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
scripts/basic/helloworld.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
scripts/basic/%-asn1.h:
#  Precious file (prerequisite of .PRECIOUS).
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

__build: scripts/basic/fixdep
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Successfully updated.
# automatic
# @ := __build
# automatic
# % := 
# automatic
# * := 
# automatic
# + := scripts/basic/fixdep
# automatic
# | := 
# automatic
# < := scripts/basic/fixdep
# automatic
# ^ := scripts/basic/fixdep
# automatic
# ? := scripts/basic/fixdep
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=1/108=1%
#  recipe to execute (from 'scripts/Makefile.build', line 119):
	@:

# Not a target:
scripts/Makefile.lib:
#  Implicit rule search has been done.
#  Last modified 2022-10-20 00:04:21.174114669
#  File has been updated.
#  Successfully updated.

# Not a target:
scripts/Makefile.build:
#  Implicit rule search has been done.
#  Last modified 2022-10-20 00:04:21.174114669
#  File has been updated.
#  Successfully updated.

# Not a target:
scripts/basic/Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-10-20 00:04:21.174114669
#  File has been updated.
#  Successfully updated.

scripts/basic/dsdt.c: scripts/basic/dsdt.asl
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'scripts/Makefile.lib', line 395):
	$(call cmd,acpi_c_asl)

# Not a target:
include/config/auto.conf:
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Failed to be updated.

# Not a target:
scripts/Kbuild.include:
#  Implicit rule search has been done.
#  Last modified 2022-10-20 00:04:21.174114669
#  File has been updated.
#  Successfully updated.

scripts/basic/fixdep: scripts/basic/fixdep.c FORCE
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: 'fixdep'
#  Last modified 2023-03-04 20:58:10.841499017
#  File has been updated.
#  Successfully updated.
# automatic
# @ := scripts/basic/fixdep
# automatic
# % := 
# automatic
# * := fixdep
# automatic
# + := scripts/basic/fixdep.c FORCE
# automatic
# | := 
# automatic
# < := scripts/basic/fixdep.c
# automatic
# ^ := scripts/basic/fixdep.c FORCE
# automatic
# ? := scripts/basic/fixdep.c FORCE
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=33/147=22%
#  recipe to execute (from 'scripts/Makefile.host', line 99):
	$(call if_changed_dep,host-csingle)

# Not a target:
arch/arm/lib/:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

scripts/basic/helloworld.so: scripts/basic/helloworld.o arch/arm/lib/ arch/arm/lib/ arch/arm/lib/
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'scripts/Makefile.lib', line 384):
	$(call cmd,efi_ld)

# Not a target:
include/autoconf.mk:
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Failed to be updated.

# files hash-table stats:
# Load=24/1024=2%, Rehash=0, Collisions=0/63=0%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 58 / storage = 1095 B / avg = 18 B
# current buf: size = 8162 B / used = 1095 B / count = 58 / avg = 18 B

# strcache performance: lookups = 113 / hit rate = 48%
# hash-table stats:
# Load=58/8192=1%, Rehash=0, Collisions=1/113=1%
# Finished Make data base on Sat Mar  4 20:58:10 2023

  HOSTCC  scripts/kconfig/conf.o
  SHIPPED scripts/kconfig/zconf.tab.c
  SHIPPED scripts/kconfig/zconf.lex.c
  SHIPPED scripts/kconfig/zconf.hash.c
  HOSTCC  scripts/kconfig/zconf.tab.o
  HOSTLD  scripts/kconfig/conf
#
# configuration written to .config
#
# GNU Make 4.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2014 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Sat Mar  4 20:58:12 2023

# Variables

# makefile (from 'scripts/Kbuild.include', line 75)
cc-cross-prefix = $(word 1, $(foreach c,$(1), $(shell set -e; if (which $(strip $(c))$(CC)) > /dev/null 2>&1 ; then echo $(c); fi)))
# environment
quiet = quiet_
# automatic
?F = $(notdir $?)
# automatic
<D = $(patsubst %/,%,$(dir $<))
# makefile (from 'scripts/Makefile.lib', line 426)
cmd_lzma = (cat $(filter-out FORCE,$^) | lzma -9 && $(call size_append, $(filter-out FORCE,$^))) > $@ || (rm -f $@ ; false)
# makefile (from 'scripts/kconfig/Makefile', line 228)
HOSTLOADLIBES_qconf = $(KC_QT_LIBS)
# default
.SHELLFLAGS := -c
# makefile (from 'scripts/Kbuild.include', line 325)
SPL_ := 
# makefile (from 'scripts/Makefile.build', line 145)
quiet_modtag := $(subst ,,   )
# environment
PATCHLEVEL = 03
# makefile (from 'scripts/Makefile.lib', line 83)
lib-y := 
# makefile (from 'scripts/Kbuild.include', line 54)
filechk = 	$(Q)set -e; $(kecho) '  CHK     $@'; mkdir -p $(dir $@); $(filechk_$(1)) < $< > $@.tmp; if [ -r $@ ] && cmp -s $@ $@.tmp; then rm -f $@.tmp; else $(kecho) '  UPD     $@'; mv -f $@.tmp $@; fi
# makefile (from 'scripts/Makefile.build', line 190)
quiet_cmd_cc_symtypes_c = SYM $(quiet_modtag) $@
# makefile (from 'scripts/Makefile.lib', line 84)
subdir-obj-y := 
# makefile (from 'scripts/Makefile.host', line 120)
quiet_cmd_host-cxxmulti = HOSTLD  $@
# environment
OBJCOPY = arm-buildroot-linux-gnueabihf-objcopy
# makefile (from 'scripts/Makefile.lib', line 81)
obj-y := 
# makefile (from 'scripts/kconfig/Makefile', line 202)
gconf-objs := gconf.o zconf.tab.o
# makefile (from 'scripts/kconfig/Makefile', line 194)
lxdialog := lxdialog/checklist.o lxdialog/util.o lxdialog/inputbox.o lxdialog/textbox.o lxdialog/yesno.o lxdialog/menubox.o
# makefile (from 'scripts/Makefile.build', line 206)
cmd_cc_o_c = $(CC) $(c_flags) -c -o $@ $<
# makefile (from 'scripts/Makefile.lib', line 443)
MKIMAGE := ./scripts/mkuboot.sh
# makefile (from 'scripts/Makefile.build', line 43)
subdir-ccflags-y := 
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# default
MAKE_VERSION := 4.1
# environment
UBOOTINCLUDE = 
# makefile
CURDIR := /home/book/100ask_imx6ull-sdk/Uboot-2017.03
# makefile
SHELL = /bin/sh
# environment
NM = arm-buildroot-linux-gnueabihf-nm
# environment
Q = @
# makefile (from 'scripts/Kbuild.include', line 169)
ld-version = $(shell $(LD) --version | $(srctree)/scripts/ld-version.sh)
# makefile (from 'scripts/Makefile.lib', line 482)
cmd_xzkern = (cat $(filter-out FORCE,$^) | sh $(srctree)/scripts/xz_wrap.sh && $(call size_append, $(filter-out FORCE,$^))) > $@ || (rm -f $@ ; false)
# makefile (from 'scripts/Kbuild.include', line 35)
quiet_kecho := echo
# makefile (from 'scripts/kconfig/Makefile', line 225)
LEX_PREFIX_zconf := zconf
# makefile (from 'scripts/Makefile.build', line 430)
PHONY := __build xconfig gconfig menuconfig config silentoldconfig update-po-config localmodconfig localyesconfig oldconfig allnoconfig allyesconfig allmodconfig alldefconfig randconfig listnewconfig olddefconfig oldnoconfig savedefconfig defconfig kvmconfig xenconfig tinyconfig scripts/kconfig/dochecklxdialog  FORCE
# environment
MODVERDIR = .tmp_versions
# makefile (from 'scripts/Makefile.lib', line 332)
cmd_S_ttf = ( echo '.section .rodata.ttf.init,"a"'; echo '.balign 16'; echo '.global __ttf_$(*F)_begin'; echo '__ttf_$(*F)_begin:'; echo '.incbin "$<" '; echo '__ttf_$(*F)_end:'; echo '.global __ttf_$(*F)_end'; echo '.balign 16'; ) > $@
# environment
_ = /usr/bin/make
# makefile (from 'scripts/Makefile.build', line 405)
quiet_cmd_link_multi-m = LD [M]  $@
# makefile (from 'scripts/Makefile.lib', line 44)
subdir-m := $(subst ,, )
# makefile (from 'scripts/Makefile.lib', line 159)
a_flags = -Wp,-MD,$(depfile) $(NOSTDINC_FLAGS) $(UBOOTINCLUDE) $(__a_flags) $(modkern_aflags)
# makefile (from 'scripts/kconfig/Makefile', line 197)
mconf-objs := mconf.o zconf.tab.o lxdialog/checklist.o lxdialog/util.o lxdialog/inputbox.o lxdialog/textbox.o lxdialog/yesno.o lxdialog/menubox.o
# makefile (from 'scripts/Makefile.build', line 42)
subdir-asflags-y := 
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from 'scripts/Kbuild.include', line 141)
cc-fullversion = $(shell $(CONFIG_SHELL) $(srctree)/scripts/gcc-version.sh -p $(CC))
# makefile (from 'scripts/Makefile.lib', line 366)
quiet_cmd_efi_objcopy = OBJCOPY $@
# makefile (from 'scripts/Makefile.lib', line 452)
UIMAGE_ENTRYADDR = $(UIMAGE_LOADADDR)
# makefile (from 'scripts/kconfig/Makefile', line 198)
nconf-objs := nconf.o zconf.tab.o nconf.gui.o
# makefile (from 'scripts/Makefile.lib', line 402)
size_append = printf $(shell dec_size=0; for F in $1; do fsize=$$(stat -c "%s" $$F); dec_size=$$(expr $$dec_size + $$fsize); done; printf "%08x\n" $$dec_size | sed 's/\(..\)/\1 /g' | { read ch0 ch1 ch2 ch3; for ch in $$ch3 $$ch2 $$ch1 $$ch0; do printf '%s%03o' '\\' $$((0x$$ch)); done; } )
# environment
BOARDDIR = 
# makefile (from 'scripts/Makefile.lib', line 200)
multi_depend = $(foreach m, $(notdir $1), $(eval $(obj)/$m: $(addprefix $(obj)/, $(foreach s, $3, $($(m:%$(strip $2)=%$(s)))))))
# makefile (from 'scripts/Makefile.lib', line 271)
quiet_cmd_ld = LD      $@
# makefile (from 'scripts/Makefile.lib', line 86)
real-objs-m := 
# makefile (from 'scripts/Makefile.host', line 1)
MAKEFILE_LIST :=  scripts/Makefile.build scripts/Makefile.uncmd_spl scripts/Kbuild.include scripts/kconfig/Makefile scripts/Makefile.lib scripts/Makefile.host
# makefile (from 'scripts/kconfig/Makefile', line 201)
qconf-objs := zconf.tab.o
# makefile (from 'scripts/Makefile.lib', line 450)
UIMAGE_TYPE = kernel
# environment
CHECKFLAGS = -D__linux__ -Dlinux -D__STDC__ -Dunix -D__unix__ -Wbitwise -Wno-return-void -D__CHECK_ENDIAN__ 
# makefile (from 'scripts/Makefile.lib', line 113)
_cpp_flags = $(KBUILD_CPPFLAGS) $(cppflags-y) $(CPPFLAGS_$(@F))
# makefile (from 'scripts/Makefile.host', line 65)
host-cxxobjs := scripts/kconfig/qconf.o
# makefile (from 'scripts/kconfig/Makefile', line 222)
HOSTCFLAGS_zconf.lex.o := -Iscripts/kconfig
# makefile (from 'scripts/Makefile.host', line 67)
host-objdirs := scripts/kconfig/lxdialog/
# 'override' directive
GNUMAKEFLAGS := 
# environment
srctree = .
# environment
HOSTCC = cc
# makefile (from 'scripts/Makefile.host', line 63)
host-cobjs := scripts/kconfig/conf.o scripts/kconfig/gconf.o scripts/kconfig/kxgettext.o scripts/kconfig/lxdialog/checklist.o scripts/kconfig/lxdialog/inputbox.o scripts/kconfig/lxdialog/menubox.o scripts/kconfig/lxdialog/textbox.o scripts/kconfig/lxdialog/util.o scripts/kconfig/lxdialog/yesno.o scripts/kconfig/mconf.o scripts/kconfig/nconf.gui.o scripts/kconfig/nconf.o scripts/kconfig/zconf.tab.o
# environment
XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
# makefile (from 'scripts/Kbuild.include', line 138)
cc-version = $(shell $(CONFIG_SHELL) $(srctree)/scripts/gcc-version.sh $(CC))
# makefile (from 'scripts/Makefile.lib', line 388)
quiet_cmd_acpi_c_asl = ASL     $<
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1001/bus
# environment
VERSION = 2017
# environment
CC = arm-buildroot-linux-gnueabihf-gcc
# makefile (from 'scripts/Makefile.lib', line 183)
dtc_cpp_flags = -Wp,-MD,$(depfile).pre.tmp -nostdinc -I$(srctree)/arch/$(ARCH)/dts -I$(srctree)/arch/$(ARCH)/dts/include -Iinclude -I$(srctree)/include -I$(srctree)/arch/$(ARCH)/include -include $(srctree)/include/linux/kconfig.h -D__ASSEMBLY__ -undef -D__DTS__
# makefile (from 'scripts/Makefile.lib', line 155)
c_flags = -Wp,-MD,$(depfile) $(NOSTDINC_FLAGS) $(UBOOTINCLUDE) $(__c_flags) $(modkern_cflags) -D"KBUILD_STR(s)=#s" $(basename_flags) $(modname_flags)
# makefile (from 'scripts/Makefile.lib', line 279)
cmd_objcopy = $(OBJCOPY) $(OBJCOPYFLAGS) $(OBJCOPYFLAGS_$(@F)) $< $@
# environment
LC_COLLATE = C
# makefile (from 'scripts/Makefile.host', line 62)
host-cmulti := scripts/kconfig/conf scripts/kconfig/gconf scripts/kconfig/kxgettext scripts/kconfig/mconf scripts/kconfig/nconf
# environment
AWK = awk
# environment
KBUILD_AFLAGS = -D__ASSEMBLY__
# makefile (from 'scripts/Makefile.build', line 312)
quiet_cmd_as_o_S = AS $(quiet_modtag)  $@
# makefile (from 'scripts/Kbuild.include', line 13)
dot-target = $(dir $@).$(notdir $@)
# makefile (from 'scripts/Makefile.lib', line 88)
multi-used-y := 
# makefile (from 'scripts/Makefile.host', line 80)
__hostc_flags = $(_hostc_flags)
# makefile (from 'scripts/Kbuild.include', line 278)
if_changed_rule = $(if $(strip $(any-prereq) $(arg-check) ), @set -e; $(rule_$(1)))
# makefile (from 'scripts/Kbuild.include', line 7)
squote := '
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# environment
CPP = arm-buildroot-linux-gnueabihf-gcc -E
# makefile (from 'scripts/Makefile.lib', line 87)
single-used-m := 
# makefile (from 'scripts/Makefile.host', line 130)
quiet_cmd_host-cxxobjs = HOSTCXX $@
# makefile (from 'scripts/Makefile.build', line 95)
_dummy := $(subst ,, )
# makefile (from 'scripts/kconfig/Makefile', line 200)
qconf-cxxobjs := qconf.o
# makefile (from 'scripts/Kbuild.include', line 120)
cc-option-yn = $(call try-run, $(CC) -Werror $(KBUILD_CPPFLAGS) $(KBUILD_CFLAGS) $(1) -c -x c /dev/null -o "$$TMP",y,n)
# environment
SSH_CONNECTION = 192.168.37.1 57533 192.168.37.134 22
# environment
PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/book/100ask_imx6ull-sdk/ToolChain/arm-buildroot-linux-gnueabihf_sdk-buildroot/bin
# makefile (from 'scripts/kconfig/Makefile', line 196)
conf-objs := conf.o  zconf.tab.o
# makefile (from 'scripts/Kbuild.include', line 218)
flags = $(foreach o,$($(1)),$(if $(filter -I%,$(o)),$(call addtree,$(o)),$(o)))
# environment
LD = arm-buildroot-linux-gnueabihf-ld.bfd
# environment
CPUDIR = 
# makefile (from 'scripts/Kbuild.include', line 204)
clean := -f ./scripts/Makefile.clean obj
# environment
HOSTLDFLAGS = 
# makefile (from 'scripts/Makefile.build', line 306)
quiet_cmd_as_s_S = CPP $(quiet_modtag) $@
# makefile (from 'scripts/Makefile.build', line 33)
EXTRA_AFLAGS := 
# makefile (from 'scripts/Kbuild.include', line 9)
space := $(subst ,, )
# environment
SSH_TTY = /dev/pts/1
# environment
XDG_RUNTIME_DIR = /run/user/1001
# makefile (from 'scripts/Kbuild.include', line 210)
hdr-inst := -f ./scripts/Makefile.headersinst obj
# makefile (from 'scripts/Makefile.lib', line 78)
always := scripts/kconfig/dochecklxdialog
# makefile (from 'scripts/Makefile.build', line 266)
rule_cc_o_c = 	$(call echo-cmd,checksrc) $(cmd_checksrc) $(call echo-cmd,cc_o_c) $(cmd_cc_o_c); $(cmd_modversions) $(call echo-cmd,record_mcount) $(cmd_record_mcount) scripts/basic/fixdep $(depfile) $@ '$(call make-cmd,cc_o_c)' > $(dot-target).tmp; rm -f $(depfile); mv -f $(dot-target).tmp $(dot-target).cmd
# makefile (from 'scripts/Makefile.lib', line 435)
quiet_cmd_lz4 = LZ4     $@
# environment
VENDOR = 
# makefile (from 'scripts/Makefile.lib', line 417)
quiet_cmd_bzip2 = BZIP2   $@
# makefile (from 'scripts/Makefile.lib', line 180)
u_boot_dtsi = $(firstword $(u_boot_dtsi_options))
# makefile (from 'scripts/Makefile.host', line 103)
quiet_cmd_host-cmulti = HOSTLD  $@
# makefile (from 'scripts/Kbuild.include', line 90)
try-run = $(shell set -e; TMP="$(TMPOUT).$$$$.tmp"; TMPO="$(TMPOUT).$$$$.o"; TMPSU="$(TMPOUT).$$$$.su"; if ($(1)) >/dev/null 2>&1; then echo "$(2)"; else echo "$(3)"; fi; rm -f "$$TMP" "$$TMPO" "$$TMPSU")
# makefile (from 'scripts/kconfig/Makefile', line 300)
quiet_cmd_moc = MOC     $@
# makefile (from 'scripts/Makefile.build', line 402)
quiet_cmd_link_multi-y = LD      $@
# makefile (from 'scripts/Kbuild.include', line 5)
comma := ,
# makefile (from 'scripts/Kbuild.include', line 258)
any-prereq = $(filter-out $(PHONY),$?) $(filter-out $(PHONY) $(wildcard $^),$^)
# environment
KBUILD_BUILTIN = 1
# environment
VPATH = .
# makefile (from 'scripts/Makefile.build', line 290)
quiet_cmd_cc_lst_c = MKLST   $@
# makefile (from 'scripts/Makefile.host', line 81)
__hostcxx_flags = $(_hostcxx_flags)
# environment
AR = arm-buildroot-linux-gnueabihf-ar
# makefile (from 'scripts/Makefile.build', line 324)
cmd_cpp_lds_S = $(CPP) $(cpp_flags) -P -C -U$(ARCH) -D__ASSEMBLY__ -DLINKER_SCRIPT -o $@ $<
# environment
LC_NUMERIC = C
# makefile (from 'scripts/Kbuild.include', line 165)
ar-option = $(call try-run, $(AR) rc$(1) "$$TMP",$(1),$(2))
# makefile (from 'scripts/Makefile.lib', line 141)
__a_flags = $(_a_flags)
# environment
LDFLAGS = 
# makefile (from 'scripts/Kbuild.include', line 186)
build := -f ./scripts/Makefile.build obj
# makefile (from 'scripts/Makefile.build', line 291)
cmd_cc_lst_c = $(CC) $(c_flags) -g -c -o $*.o $< && $(CONFIG_SHELL) $(srctree)/scripts/makelst $*.o System.map $(OBJDUMP) > $@
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# makefile (from 'scripts/Makefile.lib', line 103)
basename_flags = -D"KBUILD_BASENAME=KBUILD_STR($(call name-fix,$(basetarget)))"
# makefile (from 'scripts/kconfig/Makefile', line 90)
simple-targets := oldconfig allnoconfig allyesconfig allmodconfig alldefconfig randconfig listnewconfig olddefconfig
# environment
objtree = .
# makefile (from 'scripts/Kbuild.include', line 130)
cc-disable-warning = $(call try-run, $(CC) $(KBUILD_CPPFLAGS) $(KBUILD_CFLAGS) -W$(strip $(1)) -c -x c /dev/null -o "$$TMP",-Wno-$(strip $(1)))
# environment
LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
# environment
SUBLEVEL = 
# makefile (from 'scripts/Makefile.lib', line 112)
_a_flags = $(filter-out $(AFLAGS_REMOVE_$(basetarget).o), $(orig_a_flags))
# makefile (from 'scripts/Makefile.build', line 183)
cmd_gensymtypes = $(CPP) -D__GENKSYMS__ $(c_flags) $< | $(GENKSYMS) $(if $(1), -T $(2)) $(patsubst y,-s _,$(CONFIG_HAVE_UNDERSCORE_SYMBOL_PREFIX)) $(if $(KBUILD_PRESERVE),-p) -r $(firstword $(wildcard $(2:.symtypes=.symref) /dev/null))
# automatic
%F = $(notdir $%)
# makefile (from 'scripts/Makefile.lib', line 309)
quiet_cmd_dtc = DTC     $@
# environment
DISPLAY = localhost:10.0
# makefile (from 'scripts/Makefile.lib', line 324)
dtc-tmp = $(subst $(comma),_,$(dot-target).dts.tmp)
# makefile (from 'scripts/Makefile.lib', line 170)
u_boot_dtsi_options = $(wildcard $(dts_dir)/$(basename $(notdir $<))-u-boot.dtsi) $(wildcard $(dts_dir)/$(subst $\",,$(CONFIG_SYS_SOC))-u-boot.dtsi) $(wildcard $(dts_dir)/$(subst $\",,$(CONFIG_SYS_CPU))-u-boot.dtsi) $(wildcard $(dts_dir)/$(subst $\",,$(CONFIG_SYS_VENDOR))-u-boot.dtsi) $(wildcard $(dts_dir)/u-boot.dtsi)
# makefile (from 'scripts/Makefile.lib', line 13)
KBUILD_SUBDIR_CCFLAGS := $(subst ,, )
# makefile (from 'scripts/Makefile.lib', line 162)
cpp_flags = -Wp,-MD,$(depfile) $(NOSTDINC_FLAGS) $(UBOOTINCLUDE) $(__cpp_flags)
# environment
KBUILD_MODULES = 
# makefile (from 'scripts/Makefile.lib', line 487)
quiet_cmd_xzmisc = XZMISC  $@
# makefile (from 'scripts/Makefile.lib', line 374)
quiet_cmd_efi_ld = LD      $@
# makefile (from 'scripts/kconfig/Makefile', line 232)
HOSTCFLAGS_gconf.o = `pkg-config --cflags gtk+-2.0 gmodule-2.0 libglade-2.0` -Wno-missing-prototypes
# environment
HOSTCXX = c++
# makefile (from 'scripts/Makefile.build', line 332)
quiet_cmd_asn1_compiler = ASN.1   $@
# makefile (from 'scripts/Makefile.build', line 191)
cmd_cc_symtypes_c = set -e; $(call cmd_gensymtypes,true,$@) >/dev/null; test -s $@ || rm -f $@
# makefile (from 'scripts/Makefile.build', line 15)
prefix := .
# makefile (from 'scripts/Makefile.host', line 121)
cmd_host-cxxmulti = $(HOSTCXX) $(HOSTLDFLAGS) -o $@ $(foreach o,objs cxxobjs, $(addprefix $(obj)/,$($(@F)-$(o)))) $(HOST_LOADLIBES) $(HOSTLOADLIBES_$(@F))
# makefile (from 'scripts/Makefile.build', line 369)
modorder-cmds = $(foreach m, $(modorder), $(if $(filter %/modules.order, $m), cat $m;, echo kernel/$m;))
# makefile (from 'scripts/Makefile.lib', line 77)
extra-y := 
# makefile (from 'scripts/Makefile.lib', line 284)
quiet_cmd_gzip = GZIP    $@
# environment
PWD = /home/book/100ask_imx6ull-sdk/Uboot-2017.03
# makefile (from 'scripts/Kbuild.include', line 154)
cc-ldoption = $(call try-run, $(CC) $(1) -nostdlib -x c /dev/null -o "$$TMP",$(1),$(2))
# makefile (from 'scripts/Makefile.build', line 171)
quiet_cmd_cc_s_c = CC $(quiet_modtag)  $@
# makefile (from 'scripts/Kbuild.include', line 177)
dtc-option = $(call try-run, echo '/dts-v1/; / {};' | $(DTC) $(1),$(1),$(2))
# environment
OBJCOPYFLAGS = 
# makefile (from 'scripts/Makefile.build', line 13)
src := scripts/kconfig
# makefile (from 'scripts/Makefile.lib', line 430)
quiet_cmd_lzo = LZO     $@
# automatic
*D = $(patsubst %/,%,$(dir $*))
# makefile (from 'scripts/Makefile.lib', line 448)
UIMAGE_COMPRESSION = $(if $(2),$(2),none)
# makefile (from 'scripts/Makefile.build', line 160)
modname = $(basetarget)
# makefile (from 'scripts/kconfig/Makefile', line 204)
hostprogs-y := conf nconf mconf kxgettext qconf gconf
# makefile (from 'scripts/Makefile.build', line 36)
EXTRA_LDFLAGS := 
# makefile (from 'scripts/Makefile.lib', line 91)
multi-objs-m := 
# environment
PYTHON = python
# makefile (from 'scripts/Makefile.lib', line 62)
multi-objs := $(subst ,, )
# makefile (from 'scripts/Makefile.build', line 313)
cmd_as_o_S = $(CC) $(a_flags) -c -o $@ $<
# makefile (from 'scripts/Makefile.lib', line 367)
cmd_efi_objcopy = $(OBJCOPY) -j .header -j .text -j .sdata -j .data -j .dynamic -j .dynsym  -j .rel* -j .rela* -j .reloc $(if $(EFI_TARGET),$(EFI_TARGET),-O binary) $^ $@
# environment
HOME = /home/book
# environment
UBOOTRELEASE = 
# makefile (from 'scripts/Makefile.host', line 113)
quiet_cmd_host-cobjs = HOSTCC  $@
# makefile (from 'scripts/Kbuild.include', line 109)
as-instr = $(call try-run, printf "%b\n" "$(1)" | $(CC) $(KBUILD_AFLAGS) -c -x assembler -o "$$TMP" -,$(2),$(3))
# makefile (from 'scripts/Kbuild.include', line 192)
modbuiltin := -f ./scripts/Makefile.modbuiltin obj
# makefile (from 'scripts/kconfig/Makefile', line 199)
kxgettext-objs := kxgettext.o zconf.tab.o
# makefile (from 'scripts/Makefile.lib', line 140)
__c_flags = $(_c_flags)
# makefile (from 'scripts/Makefile.lib', line 272)
cmd_ld = $(LD) $(LDFLAGS) $(ldflags-y) $(LDFLAGS_$(@F)) $(filter-out FORCE,$^) -o $@
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# makefile (from 'scripts/Makefile.lib', line 107)
orig_c_flags = $(KBUILD_CPPFLAGS) $(KBUILD_CFLAGS) $(KBUILD_SUBDIR_CCFLAGS) $(ccflags-y) $(CFLAGS_$(basetarget).o)
# makefile (from 'scripts/Kbuild.include', line 135)
cc-name = $(shell $(CC) -v 2>&1 | grep -q "clang version" && echo clang || echo gcc)
# automatic
-*-command-variables-*- := obj=scripts/kconfig
# environment
LOGNAME = book
# makefile (from 'scripts/Kbuild.include', line 149)
binutils-version = $(shell $(CONFIG_SHELL) $(srctree)/scripts/binutils-version.sh $(AS))
# makefile (from 'scripts/kconfig/Makefile', line 28)
CONFIG_ := 
# makefile (from 'scripts/Makefile.host', line 74)
_hostc_flags = $(HOSTCFLAGS)   $(HOST_EXTRACFLAGS) $(HOSTCFLAGS_$(basetarget).o)
# automatic
+F = $(notdir $+)
# makefile (from 'scripts/Kbuild.include', line 125)
cc-option-align = $(subst -functions=0,, $(call cc-option,-falign-functions=0,-malign-functions=0))
# makefile (from 'scripts/Makefile.build', line 28)
lib-m := 
# makefile (from 'scripts/Makefile.lib', line 167)
dts_dir = $(srctree)/arch/$(ARCH)/dts
# makefile (from 'scripts/kconfig/Makefile', line 301)
cmd_moc = $(KC_QT_MOC) -i $< -o $@
# makefile (from 'scripts/Makefile.build', line 58)
kbuild-file := ./scripts/kconfig/Makefile
# environment
LDR = arm-buildroot-linux-gnueabihf-ldr
# makefile (from 'scripts/Makefile.lib', line 389)
cmd_acpi_c_asl = $(CPP) -x assembler-with-cpp -D__ASSEMBLY__ -P $(UBOOTINCLUDE) -o $<.tmp $<; iasl -p $< -tc $<.tmp $(if $(KBUILD_VERBOSE:1=), >/dev/null); mv $(patsubst %.asl,%.hex,$<) $@
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
KBUILD_VERBOSE = 0
# command line
obj = scripts/kconfig
# makefile (from 'scripts/Makefile.lib', line 82)
obj-m := 
# makefile (from 'scripts/Makefile.lib', line 418)
cmd_bzip2 = (cat $(filter-out FORCE,$^) | bzip2 -9 && $(call size_append, $(filter-out FORCE,$^))) > $@ || (rm -f $@ ; false)
# makefile (from 'scripts/Makefile.lib', line 104)
modname_flags = $(if $(filter 1,$(words $(modname))), -D"KBUILD_MODNAME=KBUILD_STR($(call name-fix,$(modname)))")
# makefile (from 'scripts/Makefile.host', line 61)
host-csingle := 
# makefile (from 'scripts/Makefile.host', line 69)
obj-dirs :=  scripts/kconfig/lxdialog/
# environment
MAKELEVEL := 1
# makefile (from 'scripts/Makefile.build', line 178)
cmd_cc_i_c = $(CPP) $(c_flags)   -o $@ $<
# environment
MAKE = make
# makefile (from 'scripts/Makefile.build', line 112)
modorder-target := scripts/kconfig/modules.order
# environment
DTC_FLAGS = 
# environment
KCONFIG_CONFIG = .config
# makefile (from 'scripts/Makefile.lib', line 454)
UIMAGE_IN = $<
# environment
SHLVL = 1
# makefile (from 'scripts/Makefile.build', line 323)
quiet_cmd_cpp_lds_S = LDS     $@
# makefile (from 'scripts/Makefile.lib', line 80)
modorder := 
# environment
KBUILD_DEFCONFIG = sandbox_defconfig
# makefile (from 'scripts/Makefile.lib', line 252)
cmd_shipped = cat $< > $@
# makefile (from 'scripts/Kbuild.include', line 36)
silent_kecho := :
# makefile (from 'scripts/Makefile.host', line 66)
host-shared := scripts/kconfig/)
# makefile (from 'scripts/Makefile.build', line 177)
quiet_cmd_cc_i_c = CPP $(quiet_modtag) $@
# environment
AS = arm-buildroot-linux-gnueabihf-as
# makefile (from 'scripts/Makefile.build', line 333)
cmd_asn1_compiler = $(objtree)/scripts/asn1_compiler $< $(subst .h,.c,$@) $(subst .c,.h,$@)
# makefile (from 'scripts/Makefile.host', line 131)
cmd_host-cxxobjs = $(HOSTCXX) $(hostcxx_flags) -c -o $@ $<
# environment
MAKEOVERRIDES = ${-*-command-variables-*-}
# makefile (from 'scripts/Makefile.lib', line 449)
UIMAGE_OPTS-y = 
# makefile (from 'scripts/Makefile.lib', line 92)
subdir-ym := 
# makefile (from 'scripts/kconfig/Makefile', line 219)
HOST_EXTRACFLAGS = $(shell $(CONFIG_SHELL) $(check-lxdialog) -ccflags) -DLOCALE $(shell $(CONFIG_SHELL) $(srctree)/$(src)/check.sh $(HOSTCC) $(HOSTCFLAGS))
# environment
XDG_SESSION_ID = 64
# environment
USER = book
# makefile (from 'scripts/Makefile.lib', line 42)
subdir-y := $(subst ,, )
# environment
CHECK = sparse
# makefile
.DEFAULT_GOAL := __build
# makefile (from 'scripts/Makefile.lib', line 453)
UIMAGE_NAME = 'Linux-$(KERNELRELEASE)'
# makefile (from 'scripts/Kbuild.include', line 268)
if_changed_dep = $(if $(strip $(any-prereq) $(arg-check) ), @set -e; $(echo-cmd) $(cmd_$(1)); scripts/basic/fixdep $(depfile) $@ '$(make-cmd)' > $(dot-target).tmp; rm -f $(depfile); mv -f $(dot-target).tmp $(dot-target).cmd)
# default
MAKECMDGOALS := mx6ull_14x14_evk_defconfig
# makefile (from 'scripts/kconfig/Makefile', line 231)
HOSTLOADLIBES_gconf = `pkg-config --libs gtk+-2.0 gmodule-2.0 libglade-2.0`
# makefile (from 'scripts/Makefile.lib', line 194)
modname-multi = $(sort $(foreach m,$(multi-used), $(if $(filter $(subst $(obj)/,,$*.o), $($(m:.o=-objs)) $($(m:.o=-y))),$(m:.o=))))
# environment
RCS_TAR_IGNORE = --exclude SCCS --exclude BitKeeper --exclude .svn --exclude CVS --exclude .pc --exclude .hg --exclude .git
# makefile (from 'scripts/Makefile.lib', line 85)
real-objs-y := 
# makefile (from 'scripts/Makefile.lib', line 425)
quiet_cmd_lzma = LZMA    $@
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from 'scripts/Makefile.lib', line 294)
cmd_dt_S_dtb = ( echo '.section .dtb.init.rodata,"a"'; echo '.balign 16'; echo '.global __dtb_$(subst -,_,$(*F))_begin'; echo '__dtb_$(subst -,_,$(*F))_begin:'; echo '.incbin "$<" '; echo '__dtb_$(subst -,_,$(*F))_end:'; echo '.global __dtb_$(subst -,_,$(*F))_end'; echo '.balign 16'; ) > $@
# makefile (from 'scripts/Makefile.lib', line 330)
quiet_cmd_S_ttf = TTF     $@
# environment
CPU = 
# makefile (from 'scripts/Makefile.host', line 88)
hostcxx_flags = -Wp,-MD,$(depfile) $(__hostcxx_flags)
# makefile (from 'scripts/Kbuild.include', line 159)
ld-option = $(call try-run, $(CC) -x c /dev/null -c -o "$$TMPO" ; $(LD) $(1) "$$TMPO" -o "$$TMP",$(1),$(2))
# makefile (from 'scripts/Makefile.build', line 141)
modkern_cflags = $(if $(part-of-module), $(KBUILD_CFLAGS_MODULE) $(CFLAGS_MODULE), $(KBUILD_CFLAGS_KERNEL) $(CFLAGS_KERNEL))
# makefile (from 'scripts/Makefile.lib', line 436)
cmd_lz4 = (cat $(filter-out FORCE,$^) | lz4c -l -c1 stdin stdout && $(call size_append, $(filter-out FORCE,$^))) > $@ || (rm -f $@ ; false)
# makefile (from 'scripts/kconfig/Makefile', line 208)
clean-files := qconf.moc .tmp_qtcheck .tmp_gtkcheck zconf.tab.c zconf.lex.c zconf.hash.c gconf.glade.h config.pot linux.pot
# makefile (from 'scripts/kconfig/Makefile', line 226)
YACC_PREFIX_zconf := zconf
# makefile (from 'scripts/Makefile.host', line 104)
cmd_host-cmulti = $(HOSTCC) $(HOSTLDFLAGS) -o $@ $(addprefix $(obj)/,$($(@F)-objs)) $(HOST_LOADLIBES) $(HOSTLOADLIBES_$(@F))
# environment
HOSTCFLAGS = -Wall -Wstrict-prototypes -O2 -fomit-frame-pointer 
# makefile (from 'scripts/Makefile.build', line 439)
targets := 
# default
MAKE_COMMAND := make
# environment
OLDPWD = /home/book/100ask_imx6ull-sdk
# environment
NOSTDINC_FLAGS = 
# makefile (from 'scripts/Makefile.lib', line 55)
multi-used := $(subst ,, )
# makefile (from 'scripts/kconfig/Makefile', line 20)
Kconfig := Kconfig
# default
.VARIABLES := 
# makefile (from 'scripts/Makefile.build', line 203)
quiet_cmd_cc_o_c = CC $(quiet_modtag)  $@
# makefile (from 'scripts/Kbuild.include', line 222)
echo-cmd = $(if $($(quiet)cmd_$(1)), echo '  $(call escsq,$($(quiet)cmd_$(1)))$(echo-why)';)
# makefile (from 'scripts/Makefile.lib', line 89)
multi-used-m := 
# automatic
*F = $(notdir $*)
# makefile (from 'scripts/Makefile.lib', line 8)
ldflags-y := $(subst ,, )
# makefile (from 'scripts/Kbuild.include', line 18)
depfile = $(subst $(comma),_,$(dot-target).d)
# environment
KBUILD_KCONFIG = 
# makefile (from 'scripts/kconfig/Makefile', line 229)
HOSTCXXFLAGS_qconf.o = $(KC_QT_CFLAGS)
# makefile (from 'scripts/Makefile.lib', line 5)
asflags-y := $(subst ,,  )
# makefile (from 'scripts/Kbuild.include', line 173)
ld-ifversion = $(shell [ $(ld-version) $(1) $(2) ] && echo $(3) || echo $(4))
# makefile (from 'scripts/Kbuild.include', line 254)
make-cmd = $(call escsq,$(subst #,\#,$(subst $$,$$$$,$(cmd_$(1)))))
# makefile (from 'scripts/kconfig/Makefile', line 127)
configfiles = $(wildcard $(srctree)/kernel/configs/$@ $(srctree)/arch/$(SRCARCH)/configs/$@)
# environment
ARCH = arm
# makefile
MAKEFLAGS = prR -I/home/book/100ask_imx6ull-sdk/Uboot-2017.03 --no-print-directory -- $(MAKEOVERRIDES)
# makefile (from 'scripts/Makefile.lib', line 6)
ccflags-y := $(subst ,,  )
# makefile (from 'scripts/Makefile.lib', line 292)
quiet_cmd_dt_S_dtb = DTB     $@
# environment
MFLAGS = -prR -I/home/book/100ask_imx6ull-sdk/Uboot-2017.03 --no-print-directory
# environment
SSH_CLIENT = 192.168.37.1 57533 22
# makefile (from 'scripts/Kbuild.include', line 103)
as-option = $(call try-run, $(CC) $(KBUILD_CFLAGS) $(1) -c -x assembler /dev/null -o "$$TMP",$(1),$(2))
# environment
MAIL = /var/mail/book
# environment
HOSTCXXFLAGS = -O2
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from 'scripts/Kbuild.include', line 115)
cc-option = $(call try-run, $(CC) -Werror $(KBUILD_CPPFLAGS) $(KBUILD_CFLAGS) $(1) -c -x c /dev/null -o "$$TMP",$(1),$(2))
# environment
SOC = 
# environment
OBJDUMP = arm-buildroot-linux-gnueabihf-objdump
# makefile (from 'scripts/Makefile.lib', line 142)
__cpp_flags = $(_cpp_flags)
# makefile (from 'scripts/Makefile.lib', line 457)
quiet_cmd_uimage = UIMAGE  $(UIMAGE_OUT)
# makefile (from 'scripts/Makefile.lib', line 312)
cmd_dtc = mkdir -p $(dir ${dtc-tmp}) ; cat $< $(if $(u_boot_dtsi), | sed '/^\/ {$$/{x;s%$$%#include \"$(u_boot_dtsi)\"%;G;}') | $(CPP) $(dtc_cpp_flags) -x assembler-with-cpp -o $(dtc-tmp) - ; $(DTC) -O dtb -o $@ -b 0 -i $(dir $<) $(DTC_FLAGS) -d $(depfile).dtc.tmp $(dtc-tmp) ; cat $(depfile).pre.tmp $(depfile).dtc.tmp > $(depfile)
# environment
BOARD = 
# makefile (from 'scripts/Makefile.host', line 60)
__hostprogs := scripts/kconfig/conf scripts/kconfig/gconf scripts/kconfig/kxgettext scripts/kconfig/mconf scripts/kconfig/nconf scripts/kconfig/qconf
# makefile (from 'scripts/Makefile.host', line 87)
hostc_flags = -Wp,-MD,$(depfile) $(__hostc_flags)
# makefile (from 'scripts/Kbuild.include', line 229)
objectify = $(foreach o,$(1),$(if $(filter /%,$(o)),$(o),$(obj)/$(o)))
# makefile (from 'scripts/Makefile.build', line 54)
save-cflags := 
# makefile (from 'scripts/Makefile.build', line 307)
cmd_as_s_S = $(CPP) $(a_flags)   -o $@ $<
# makefile (from 'scripts/Makefile.lib', line 488)
cmd_xzmisc = (cat $(filter-out FORCE,$^) | xz --check=crc32 --lzma2=dict=1MiB) > $@ || (rm -f $@ ; false)
# makefile (from 'scripts/Makefile.lib', line 375)
cmd_efi_ld = $(LD) -nostdlib -znocombreloc -T $(EFI_LDS_PATH) -shared -Bsymbolic $^ -o $@
# environment
STRIP = arm-buildroot-linux-gnueabihf-strip
# makefile (from 'scripts/Makefile.lib', line 496)
MKIMAGEOUTPUT = /dev/null
# environment
DTC = dtc
# makefile (from 'scripts/Kbuild.include', line 198)
dtbinst := -f scripts/Makefile.dtbinst obj
# environment
CROSS_COMPILE = arm-buildroot-linux-gnueabihf-
# makefile (from 'scripts/Makefile.build', line 397)
link_multi_deps = $(filter $(addprefix $(obj)/, $($(subst $(obj)/,,$(@:.o=-objs))) $($(subst $(obj)/,,$(@:.o=-y)))), $^)
# makefile (from 'scripts/Makefile.lib', line 285)
cmd_gzip = (cat $(filter-out FORCE,$^) | gzip -n -f -9 > $@) || (rm -f $@ ; false)
# makefile (from 'scripts/Kbuild.include', line 146)
cc-ifversion = $(shell [ $(cc-version) $(1) $(2) ] && echo $(3) || echo $(4))
# environment
HOSTARCH = x86_64
# makefile (from 'scripts/Kbuild.include', line 30)
escsq = $(subst $(squote),'\$(squote)',$1)
# makefile (from 'scripts/kconfig/Makefile', line 235)
HOSTLOADLIBES_mconf = $(shell $(CONFIG_SHELL) $(check-lxdialog) -ldflags $(HOSTCC))
# makefile (from 'scripts/Makefile.build', line 172)
cmd_cc_s_c = $(CC) $(c_flags) $(DISABLE_LTO) -fverbose-asm -S -o $@ $<
# makefile (from 'scripts/Kbuild.include', line 226)
cmd = @$(echo-cmd) $(cmd_$(1))
# default
MAKEFILES := 
# makefile (from 'scripts/kconfig/Makefile', line 237)
HOSTLOADLIBES_nconf = $(shell pkg-config --libs menuw panelw ncursesw 2>/dev/null || pkg-config --libs menu panel ncurses 2>/dev/null || echo "-lmenu -lpanel -lncurses"  )
# makefile (from 'scripts/Makefile.build', line 403)
cmd_link_multi-y = $(LD) $(ld_flags) -r -o $@ $(link_multi_deps) $(cmd_secanalysis)
# makefile (from 'scripts/kconfig/Makefile', line 15)
SRCARCH := ..
# makefile (from 'scripts/Makefile.lib', line 431)
cmd_lzo = (cat $(filter-out FORCE,$^) | lzop -9 && $(call size_append, $(filter-out FORCE,$^))) > $@ || (rm -f $@ ; false)
# environment
KBUILD_SRC = 
# environment
CONFIG_SHELL = /bin/bash
# makefile (from 'scripts/Makefile.lib', line 12)
KBUILD_SUBDIR_ASFLAGS := $(subst ,, )
# automatic
<F = $(notdir $<)
# makefile (from 'scripts/Makefile.lib', line 251)
quiet_cmd_shipped = SHIPPED $@
# makefile (from 'scripts/Makefile.build', line 301)
modkern_aflags := $(subst ,, )
# makefile (from 'scripts/Makefile.lib', line 278)
quiet_cmd_objcopy = OBJCOPY $@
# makefile (from 'scripts/Makefile.lib', line 458)
cmd_uimage = $(CONFIG_SHELL) $(MKIMAGE) -A $(UIMAGE_ARCH) -O linux -C $(UIMAGE_COMPRESSION) $(UIMAGE_OPTS-y) -T $(UIMAGE_TYPE) -a $(UIMAGE_LOADADDR) -e $(UIMAGE_ENTRYADDR) -n $(UIMAGE_NAME) -d $(UIMAGE_IN) $(UIMAGE_OUT)
# makefile (from 'scripts/Makefile.lib', line 351)
cmd_S_efi = ( echo '.section .rodata.efi.init,"a"'; echo '.balign 16'; echo '.global __efi_hello_world_begin'; echo '__efi_hello_world_begin:'; echo '.incbin "$<" '; echo '__efi_hello_world_end:'; echo '.global __efi_hello_world_end'; echo '.balign 16'; ) > $@
# environment
HOSTOS = linux
# environment
KBUILD_CPPFLAGS = -D__KERNEL__ -D__UBOOT__
# makefile (from 'scripts/Makefile.lib', line 43)
__subdir-m := 
# makefile (from 'scripts/Makefile.host', line 114)
cmd_host-cobjs = $(HOSTCC) $(hostc_flags) -c -o $@ $<
# environment
PERL = perl
# makefile (from 'scripts/kconfig/Makefile', line 173)
check-lxdialog := ./scripts/kconfig/lxdialog/check-lxdialog.sh
# makefile (from 'scripts/kconfig/Makefile', line 223)
HOSTCFLAGS_zconf.tab.o := -Iscripts/kconfig
# makefile (from 'scripts/Makefile.lib', line 498)
cmd_mkimage = $(objtree)/tools/mkimage $(MKIMAGEFLAGS_$(@F)) -d $< $@ $(if $(KBUILD_VERBOSE:1=), >$(MKIMAGEOUTPUT))
# makefile (from 'scripts/Kbuild.include', line 150)
dtc-version = $(shell $(CONFIG_SHELL) $(srctree)/scripts/dtc-version.sh $(DTC))
# makefile (from 'scripts/Makefile.lib', line 497)
quiet_cmd_mkimage = MKIMAGE $@
# makefile (from 'scripts/Makefile.lib', line 455)
UIMAGE_OUT = $@
# makefile (from 'scripts/Kbuild.include', line 242)
arg-check = $(strip $(filter-out $(cmd_$(1)), $(cmd_$@)) $(filter-out $(cmd_$@),   $(cmd_$(1))) )
# makefile (from 'scripts/Makefile.lib', line 165)
ld_flags = $(LDFLAGS) $(ldflags-y)
# makefile (from 'scripts/Makefile.lib', line 102)
name-fix = $(subst $(comma),_,$(subst -,_,$1))
# environment
KBUILD_CFLAGS = -Wall -Wstrict-prototypes -Wno-format-security -fno-builtin -ffreestanding
# environment
RCS_FIND_IGNORE = \( -name SCCS -o -name BitKeeper -o -name .svn -o -name CVS -o -name .pc -o -name .hg -o -name .git \) -prune -o
# makefile (from 'scripts/Makefile.host', line 95)
quiet_cmd_host-csingle = HOSTCC  $@
# makefile (from 'scripts/Kbuild.include', line 22)
basetarget = $(basename $(notdir $@))
# automatic
^F = $(notdir $^)
# makefile (from 'scripts/Makefile.build', line 57)
kbuild-dir := ./scripts/kconfig
# makefile (from 'scripts/Makefile.lib', line 447)
UIMAGE_ARCH = $(SRCARCH)
# default
SUFFIXES := 
# makefile (from 'scripts/Kbuild.include', line 262)
if_changed = $(if $(strip $(any-prereq) $(arg-check)), @set -e; $(echo-cmd) $(cmd_$(1)); printf '%s\n' 'cmd_$@ := $(make-cmd)' > $(dot-target).cmd)
# makefile (from 'scripts/Makefile.build', line 406)
cmd_link_multi-m = $(cmd_link_multi-y)
# makefile (from 'scripts/Kbuild.include', line 26)
baseprereq = $(basename $(notdir $<))
# makefile (from 'scripts/Makefile.build', line 35)
EXTRA_CPPFLAGS := 
# makefile (from 'scripts/Kbuild.include', line 214)
addtree = $(if $(patsubst -I%,%,$(1)), $(if $(filter-out -I/%,$(1)),$(patsubst -I%,-I$(srctree)/%,$(1))) $(1))
# makefile (from 'scripts/Makefile.build', line 440)
cmd_files := 
# makefile (from 'scripts/Makefile.host', line 76)
_hostcxx_flags = $(HOSTCXXFLAGS) $(HOST_EXTRACXXFLAGS) $(HOSTCXXFLAGS_$(basetarget).o)
# makefile (from 'scripts/Makefile.lib', line 41)
__subdir-y := 
# default
.INCLUDE_DIRS = /home/book/100ask_imx6ull-sdk/Uboot-2017.03 /usr/include /usr/local/include /usr/include
# makefile (from 'scripts/Makefile.lib', line 481)
quiet_cmd_xzkern = XZKERN  $@
# makefile (from 'scripts/Makefile.lib', line 109)
_c_flags = $(filter-out $(CFLAGS_REMOVE_$(basetarget).o), $(orig_c_flags))
# makefile (from 'scripts/Makefile.lib', line 110)
orig_a_flags = $(KBUILD_CPPFLAGS) $(KBUILD_AFLAGS) $(KBUILD_SUBDIR_ASFLAGS) $(asflags-y) $(AFLAGS_$(basetarget).o)
# makefile (from 'scripts/Makefile.lib', line 378)
EFI_LDS_PATH = $(srctree)/arch/$(ARCH)/lib/$(EFI_LDS)
# environment
KBUILD_EXTMOD = 
# environment
KBUILD_CHECKSRC = 0
# default
.RECIPEPREFIX := 
# environment
MAKE_TERMERR = /dev/pts/1
# makefile (from 'scripts/Makefile.build', line 34)
EXTRA_CFLAGS := 
# makefile (from 'scripts/Kbuild.include', line 83)
TMPOUT := 
# default
MAKE_HOST := x86_64-pc-linux-gnu
# makefile (from 'scripts/Makefile.host', line 64)
host-cxxmulti := scripts/kconfig/qconf
# makefile (from 'scripts/Makefile.lib', line 7)
cppflags-y := $(subst ,,  )
# makefile (from 'scripts/Makefile.host', line 96)
cmd_host-csingle = $(HOSTCC) $(hostc_flags) -o $@ $< $(HOST_LOADLIBES) $(HOSTLOADLIBES_$(@F))
# environment
LANG = en_US.UTF-8
# environment
TERM = xterm
# makefile (from 'scripts/Makefile.lib', line 90)
multi-objs-y := 
# makefile (from 'scripts/Kbuild.include', line 8)
empty := 
# makefile (from 'scripts/Kbuild.include', line 6)
quote := "
# environment
UBOOTVERSION = 2017.03
# makefile (from 'scripts/Kbuild.include', line 37)
kecho := echo
# makefile (from 'scripts/Makefile.lib', line 451)
UIMAGE_LOADADDR = arch_must_set_this
# variable set hash-table stats:
# Load=376/1024=37%, Rehash=0, Collisions=231/1338=17%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# scripts/kconfig (device 2052, inode 5639624): 35 files, 5 impossibilities.

# 35 files, 5 impossibilities in 1 directories.

# Implicit Rules

%_defconfig: scripts/kconfig/conf
#  recipe to execute (from 'scripts/kconfig/Makefile', line 121):
	$(Q)$< $(silent) --defconfig=arch/$(SRCARCH)/configs/$@ $(Kconfig)

%_config: %_defconfig
#  recipe to execute (from 'scripts/kconfig/Makefile', line 125):
	@:

%.config: scripts/kconfig/conf
#  recipe to execute (from 'scripts/kconfig/Makefile', line 130):
	$(if $(call configfiles),, $(error No configuration exists for this target on this architecture))
	$(Q)$(CONFIG_SHELL) $(srctree)/scripts/kconfig/merge_config.sh -m .config $(configfiles)
	+$(Q)yes "" | $(MAKE) -f $(srctree)/Makefile oldconfig

scripts/kconfig/%.moc: scripts/kconfig/%.h scripts/kconfig/.tmp_qtcheck
#  recipe to execute (from 'scripts/kconfig/Makefile', line 304):
	$(call cmd,moc)

scripts/kconfig/%: scripts/kconfig/%_shipped
#  recipe to execute (from 'scripts/Makefile.lib', line 255):
	$(call cmd,shipped)

scripts/kconfig/%.dtb.S: scripts/kconfig/%.dtb
#  recipe to execute (from 'scripts/Makefile.lib', line 307):
	$(call cmd,dt_S_dtb)

scripts/kconfig/%.dtb: scripts/kconfig/%.dts FORCE
#  recipe to execute (from 'scripts/Makefile.lib', line 322):
	$(call if_changed_dep,dtc)

scripts/kconfig/%.S: scripts/kconfig/%.ttf
#  recipe to execute (from 'scripts/Makefile.lib', line 345):
	$(call cmd,S_ttf)

scripts/kconfig/%_efi.S: scripts/kconfig/%.efi
#  recipe to execute (from 'scripts/Makefile.lib', line 364):
	$(call cmd,S_efi)

scripts/kconfig/%.efi: scripts/kconfig/%.so
#  recipe to execute (from 'scripts/Makefile.lib', line 372):
	$(call cmd,efi_objcopy)

scripts/kconfig/%.s: scripts/kconfig/%.c FORCE
#  recipe to execute (from 'scripts/Makefile.build', line 175):
	$(call if_changed_dep,cc_s_c)

scripts/kconfig/%.i: scripts/kconfig/%.c FORCE
#  recipe to execute (from 'scripts/Makefile.build', line 181):
	$(call if_changed_dep,cc_i_c)

scripts/kconfig/%.symtypes: scripts/kconfig/%.c FORCE
#  recipe to execute (from 'scripts/Makefile.build', line 197):
	$(call cmd,cc_symtypes_c)

scripts/kconfig/%.o: scripts/kconfig/%.c FORCE
#  recipe to execute (from 'scripts/Makefile.build', line 280):
	$(call cmd,force_checksrc)
	$(call if_changed_rule,cc_o_c)

scripts/kconfig/%.lst: scripts/kconfig/%.c FORCE
#  recipe to execute (from 'scripts/Makefile.build', line 296):
	$(call if_changed_dep,cc_lst_c)

scripts/kconfig/%.s: scripts/kconfig/%.S FORCE
#  recipe to execute (from 'scripts/Makefile.build', line 310):
	$(call if_changed_dep,as_s_S)

scripts/kconfig/%.o: scripts/kconfig/%.S FORCE
#  recipe to execute (from 'scripts/Makefile.build', line 316):
	$(call if_changed_dep,as_o_S)

scripts/kconfig/%.lds: scripts/kconfig/%.lds.S FORCE
#  recipe to execute (from 'scripts/Makefile.build', line 328):
	$(call if_changed_dep,cpp_lds_S)

scripts/kconfig/%-asn1.c scripts/kconfig/%-asn1.h: scripts/kconfig/%.asn1 scripts/asn1_compiler
#  recipe to execute (from 'scripts/Makefile.build', line 339):
	$(call cmd,asn1_compiler)

# 19 implicit rules, 0 (0.0%) terminal.

# Files

# Not a target:
scripts/kconfig/%-asn1.h:
#  Precious file (prerequisite of .PRECIOUS).
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

scripts/kconfig/lxdialog/yesno.o: scripts/kconfig/lxdialog/yesno.c FORCE scripts/kconfig/dochecklxdialog
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: 'lxdialog/yesno'
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'scripts/Makefile.host', line 116):
	$(call if_changed_dep,host-cobjs)

alldefconfig: scripts/kconfig/conf
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'scripts/kconfig/Makefile', line 95):
	$< $(silent) --$@ $(Kconfig)

xconfig: scripts/kconfig/qconf
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'scripts/kconfig/Makefile', line 31):
	$< $(silent) $(Kconfig)

tinyconfig:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'scripts/kconfig/Makefile', line 144):
	$(Q)$(MAKE) -f $(srctree)/Makefile allnoconfig tiny.config

# Not a target:
scripts/kconfig/mconf.c:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

allyesconfig: scripts/kconfig/conf
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'scripts/kconfig/Makefile', line 95):
	$< $(silent) --$@ $(Kconfig)

# Not a target:
scripts/kconfig/nconf.c:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

scripts/kconfig/lxdialog/inputbox.o: scripts/kconfig/lxdialog/inputbox.c FORCE scripts/kconfig/dochecklxdialog
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: 'lxdialog/inputbox'
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'scripts/Makefile.host', line 116):
	$(call if_changed_dep,host-cobjs)

scripts/kconfig/kxgettext.o: scripts/kconfig/kxgettext.c FORCE
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: 'kxgettext'
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'scripts/Makefile.host', line 116):
	$(call if_changed_dep,host-cobjs)

config: scripts/kconfig/conf
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'scripts/kconfig/Makefile', line 40):
	$< $(silent) --oldaskconfig $(Kconfig)

scripts/kconfig/kxgettext: FORCE scripts/kconfig/kxgettext.o scripts/kconfig/zconf.tab.o
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'scripts/Makefile.host', line 108):
	$(call if_changed,host-cmulti)

FORCE:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Successfully updated.

.PHONY: __build xconfig gconfig menuconfig config silentoldconfig update-po-config localmodconfig localyesconfig oldconfig allnoconfig allyesconfig allmodconfig alldefconfig randconfig listnewconfig olddefconfig oldnoconfig savedefconfig defconfig kvmconfig xenconfig tinyconfig scripts/kconfig/dochecklxdialog FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
scripts/kconfig/gconf.glade:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

scripts/kconfig/zconf.tab.o: scripts/kconfig/zconf.tab.c FORCE scripts/kconfig/zconf.lex.c scripts/kconfig/zconf.hash.c
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: 'zconf.tab'
#  Last modified 2023-03-04 20:58:12.11351832
#  File has been updated.
#  Successfully updated.
# automatic
# @ := scripts/kconfig/zconf.tab.o
# automatic
# % := 
# automatic
# * := zconf.tab
# automatic
# + := scripts/kconfig/zconf.tab.c FORCE scripts/kconfig/zconf.lex.c scripts/kconfig/zconf.hash.c
# automatic
# | := 
# automatic
# < := scripts/kconfig/zconf.tab.c
# automatic
# ^ := scripts/kconfig/zconf.tab.c FORCE scripts/kconfig/zconf.lex.c scripts/kconfig/zconf.hash.c
# automatic
# ? := scripts/kconfig/zconf.tab.c FORCE scripts/kconfig/zconf.lex.c scripts/kconfig/zconf.hash.c
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=45/237=19%
#  recipe to execute (from 'scripts/Makefile.host', line 116):
	$(call if_changed_dep,host-cobjs)

# Not a target:
scripts/kconfig/zconf.hash.c_shipped:
#  Implicit rule search has been done.
#  Last modified 2022-10-20 00:04:21.178114628
#  File has been updated.
#  Successfully updated.

# Not a target:
scripts/kconfig/Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-10-20 00:04:21.178114628
#  File has been updated.
#  Successfully updated.

silentoldconfig: scripts/kconfig/conf
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'scripts/kconfig/Makefile', line 46):
	$(Q)mkdir -p include/config include/generated
	$(Q)test -e include/generated/autoksyms.h || \
	    touch   include/generated/autoksyms.h
	$< $(silent) --$@ $(Kconfig)

.PRECIOUS: scripts/kconfig/%-asn1.c scripts/kconfig/%-asn1.h
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
scripts/Makefile.uncmd_spl:
#  Implicit rule search has been done.
#  Last modified 2022-10-20 00:04:21.174114669
#  File has been updated.
#  Successfully updated.

scripts/kconfig/nconf.gui.o: scripts/kconfig/nconf.gui.c FORCE
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: 'nconf.gui'
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'scripts/Makefile.host', line 116):
	$(call if_changed_dep,host-cobjs)

# Not a target:
xen.config:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

scripts/kconfig/dsdt.c: scripts/kconfig/dsdt.asl
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'scripts/Makefile.lib', line 395):
	$(call cmd,acpi_c_asl)

scripts/kconfig/conf: FORCE scripts/kconfig/conf.o scripts/kconfig/zconf.tab.o
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  Last modified 2023-03-04 20:58:12.129518563
#  File has been updated.
#  Successfully updated.
# automatic
# @ := scripts/kconfig/conf
# automatic
# % := 
# automatic
# * := 
# automatic
# + := FORCE scripts/kconfig/conf.o scripts/kconfig/zconf.tab.o
# automatic
# | := 
# automatic
# < := FORCE
# automatic
# ^ := FORCE scripts/kconfig/conf.o scripts/kconfig/zconf.tab.o
# automatic
# ? := FORCE scripts/kconfig/conf.o scripts/kconfig/zconf.tab.o
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=29/423=7%
#  recipe to execute (from 'scripts/Makefile.host', line 108):
	$(call if_changed,host-cmulti)

scripts/kconfig/conf.o: scripts/kconfig/conf.c FORCE
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: 'conf'
#  Last modified 2023-03-04 20:58:11.06550242
#  File has been updated.
#  Successfully updated.
# automatic
# @ := scripts/kconfig/conf.o
# automatic
# % := 
# automatic
# * := conf
# automatic
# + := scripts/kconfig/conf.c FORCE
# automatic
# | := 
# automatic
# < := scripts/kconfig/conf.c
# automatic
# ^ := scripts/kconfig/conf.c FORCE
# automatic
# ? := scripts/kconfig/conf.c FORCE
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=53/183=29%
#  recipe to execute (from 'scripts/Makefile.host', line 116):
	$(call if_changed_dep,host-cobjs)

scripts/kconfig/lxdialog/util.o: scripts/kconfig/lxdialog/util.c FORCE scripts/kconfig/dochecklxdialog
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: 'lxdialog/util'
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'scripts/Makefile.host', line 116):
	$(call if_changed_dep,host-cobjs)

xenconfig: xen.config
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'scripts/kconfig/Makefile', line 140):
	@:

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
scripts/kconfig/zconf.tab.c_shipped:
#  Implicit rule search has been done.
#  Last modified 2022-10-20 00:04:21.178114628
#  File has been updated.
#  Successfully updated.

scripts/kconfig/dochecklxdialog:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'scripts/kconfig/Makefile', line 214):
	$(Q)$(CONFIG_SHELL) $(check-lxdialog) -check $(HOSTCC) $(HOST_EXTRACFLAGS) $(HOSTLOADLIBES_mconf)

defconfig: scripts/kconfig/conf
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'scripts/kconfig/Makefile', line 112):
	@$(kecho) "*** Default configuration is based on '$(KBUILD_DEFCONFIG)'"
	$(Q)$< $(silent) --defconfig=arch/$(SRCARCH)/configs/$(KBUILD_DEFCONFIG) $(Kconfig)

# Not a target:
scripts/kconfig/lxdialog/menubox.c:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

scripts/kconfig/helloworld.so: scripts/kconfig/helloworld.o arch/arm/lib/ arch/arm/lib/ arch/arm/lib/
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'scripts/Makefile.lib', line 384):
	$(call cmd,efi_ld)

# Not a target:
scripts/kconfig/lxdialog/yesno.c:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

scripts/kconfig/zconf.hash.c: scripts/kconfig/zconf.hash.c_shipped
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'zconf.hash.c'
#  Last modified 2023-03-04 20:58:11.069502481
#  File has been updated.
#  Successfully updated.
# automatic
# @ := scripts/kconfig/zconf.hash.c
# automatic
# % := 
# automatic
# * := zconf.hash.c
# automatic
# + := scripts/kconfig/zconf.hash.c_shipped
# automatic
# | := 
# automatic
# < := scripts/kconfig/zconf.hash.c_shipped
# automatic
# ^ := scripts/kconfig/zconf.hash.c_shipped
# automatic
# ? := scripts/kconfig/zconf.hash.c_shipped
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=1/30=3%
#  recipe to execute (from 'scripts/Makefile.lib', line 255):
	$(call cmd,shipped)

# Not a target:
scripts/kconfig/lxdialog/inputbox.c:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
scripts/kconfig/kxgettext.c:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
scripts/kconfig/.tmp_qtcheck:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

help:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'scripts/kconfig/Makefile', line 148):
	@echo  '  config	  - Update current config utilising a line-oriented program'
	@echo  '  nconfig         - Update current config utilising a ncurses menu based'
	@echo  '                    program'
	@echo  '  menuconfig	  - Update current config utilising a menu based program'
	@echo  '  xconfig	  - Update current config utilising a Qt based front-end'
	@echo  '  gconfig	  - Update current config utilising a GTK+ based front-end'
	@echo  '  oldconfig	  - Update current config utilising a provided .config as base'
	@echo  '  localmodconfig  - Update current config disabling modules not loaded'
	@echo  '  localyesconfig  - Update current config converting local mods to core'
	@echo  '  silentoldconfig - Same as oldconfig, but quietly, additionally update deps'
	@echo  '  defconfig	  - New config with default from ARCH supplied defconfig'
	@echo  '  savedefconfig   - Save current config as ./defconfig (minimal config)'
	@echo  '  allnoconfig	  - New config where all options are answered with no'
	@echo  '  allyesconfig	  - New config where all options are accepted with yes'
	@echo  '  allmodconfig	  - New config selecting modules when possible'
	@echo  '  alldefconfig    - New config with all symbols set to default'
	@echo  '  randconfig	  - New config with random answer to all options'
	@echo  '  listnewconfig   - List new options'
	@echo  '  olddefconfig	  - Same as silentoldconfig but sets new symbols to their'
	@echo  '                    default value'

# Not a target:
kvm_guest.config:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

scripts/kconfig/zconf.tab.c: scripts/kconfig/zconf.tab.c_shipped
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'zconf.tab.c'
#  Last modified 2023-03-04 20:58:11.069502481
#  File has been updated.
#  Successfully updated.
# automatic
# @ := scripts/kconfig/zconf.tab.c
# automatic
# % := 
# automatic
# * := zconf.tab.c
# automatic
# + := scripts/kconfig/zconf.tab.c_shipped
# automatic
# | := 
# automatic
# < := scripts/kconfig/zconf.tab.c_shipped
# automatic
# ^ := scripts/kconfig/zconf.tab.c_shipped
# automatic
# ? := scripts/kconfig/zconf.tab.c_shipped
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=1/30=3%
#  recipe to execute (from 'scripts/Makefile.lib', line 255):
	$(call cmd,shipped)

mx6ull_14x14_evk_defconfig: scripts/kconfig/conf
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'mx6ull_14x14_evk'
#  File does not exist.
#  File has been updated.
#  Successfully updated.
# automatic
# @ := mx6ull_14x14_evk_defconfig
# automatic
# % := 
# automatic
# * := mx6ull_14x14_evk
# automatic
# + := scripts/kconfig/conf
# automatic
# | := 
# automatic
# < := scripts/kconfig/conf
# automatic
# ^ := scripts/kconfig/conf
# automatic
# ? := scripts/kconfig/conf
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=6/412=1%
#  recipe to execute (from 'scripts/kconfig/Makefile', line 121):
	$(Q)$< $(silent) --defconfig=arch/$(SRCARCH)/configs/$@ $(Kconfig)

# Not a target:
scripts/Makefile.host:
#  Implicit rule search has been done.
#  Last modified 2022-10-20 00:04:21.174114669
#  File has been updated.
#  Successfully updated.

scripts/kconfig/gconf: FORCE scripts/kconfig/gconf.o scripts/kconfig/zconf.tab.o
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'scripts/Makefile.host', line 108):
	$(call if_changed,host-cmulti)

# Not a target:
scripts/kconfig/nconf.gui.c:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

scripts/kconfig/gconf.o: scripts/kconfig/gconf.c FORCE scripts/kconfig/.tmp_gtkcheck
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: 'gconf'
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'scripts/Makefile.host', line 116):
	$(call if_changed_dep,host-cobjs)

oldconfig: scripts/kconfig/conf
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'scripts/kconfig/Makefile', line 95):
	$< $(silent) --$@ $(Kconfig)

# Not a target:
scripts/kconfig/zconf.lex.c_shipped:
#  Implicit rule search has been done.
#  Last modified 2022-10-20 00:04:21.178114628
#  File has been updated.
#  Successfully updated.

# Not a target:
scripts/kconfig/conf.c:
#  Implicit rule search has been done.
#  Last modified 2022-10-20 00:04:21.178114628
#  File has been updated.
#  Successfully updated.

olddefconfig: scripts/kconfig/conf
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'scripts/kconfig/Makefile', line 95):
	$< $(silent) --$@ $(Kconfig)

# Not a target:
scripts/kconfig/streamline_config.pl:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
scripts/kconfig/lxdialog/util.c:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

allmodconfig: scripts/kconfig/conf
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'scripts/kconfig/Makefile', line 95):
	$< $(silent) --$@ $(Kconfig)

localyesconfig: scripts/kconfig/streamline_config.pl scripts/kconfig/conf
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'scripts/kconfig/Makefile', line 52):
	$(Q)mkdir -p include/config include/generated
	$(Q)perl $< --$@ $(srctree) $(Kconfig) > .tmp.config
	$(Q)if [ -f .config ]; then 					\
			cmp -s .tmp.config .config ||			\
			(mv -f .config .config.old.1;			\
			 mv -f .tmp.config .config;			\
			 $(obj)/conf $(silent) --silentoldconfig $(Kconfig); \
			 mv -f .config.old.1 .config.old)		\
	else								\
			mv -f .tmp.config .config;			\
			$(obj)/conf $(silent) --silentoldconfig $(Kconfig); \
	fi
	$(Q)rm -f .tmp.config

scripts/kconfig/lxdialog/textbox.o: scripts/kconfig/lxdialog/textbox.c FORCE scripts/kconfig/dochecklxdialog
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: 'lxdialog/textbox'
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'scripts/Makefile.host', line 116):
	$(call if_changed_dep,host-cobjs)

scripts/kconfig/gconf.glade.h: scripts/kconfig/gconf.glade
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'scripts/kconfig/Makefile', line 308):
	$(Q)intltool-extract --type=gettext/glade --srcdir=$(srctree) \
	$(obj)/gconf.glade

kvmconfig: kvm_guest.config
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'scripts/kconfig/Makefile', line 136):
	@:

oldnoconfig: olddefconfig
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

# Not a target:
scripts/kconfig/lxdialog/checklist.c:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

localmodconfig: scripts/kconfig/streamline_config.pl scripts/kconfig/conf
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'scripts/kconfig/Makefile', line 52):
	$(Q)mkdir -p include/config include/generated
	$(Q)perl $< --$@ $(srctree) $(Kconfig) > .tmp.config
	$(Q)if [ -f .config ]; then 					\
			cmp -s .tmp.config .config ||			\
			(mv -f .config .config.old.1;			\
			 mv -f .tmp.config .config;			\
			 $(obj)/conf $(silent) --silentoldconfig $(Kconfig); \
			 mv -f .config.old.1 .config.old)		\
	else								\
			mv -f .tmp.config .config;			\
			$(obj)/conf $(silent) --silentoldconfig $(Kconfig); \
	fi
	$(Q)rm -f .tmp.config

# Not a target:
scripts/kconfig/qconf.moc:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

update-po-config: scripts/kconfig/kxgettext scripts/kconfig/gconf.glade.h
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'scripts/kconfig/Makefile', line 69):
	$(Q)$(kecho) "  GEN     config.pot"
	$(Q)xgettext --default-domain=linux                         \
	    --add-comments --keyword=_ --keyword=N_                 \
	    --from-code=UTF-8                                       \
	    --files-from=$(srctree)/scripts/kconfig/POTFILES.in     \
	    --directory=$(srctree) --directory=$(objtree)           \
	    --output $(obj)/config.pot
	$(Q)sed -i s/CHARSET/UTF-8/ $(obj)/config.pot
	$(Q)(for i in `ls $(srctree)/arch/*/Kconfig      \
	    $(srctree)/arch/*/um/Kconfig`;               \
	    do                                           \
		$(kecho) "  GEN     $$i";                    \
		$(obj)/kxgettext $$i                     \
		     >> $(obj)/config.pot;               \
	    done )
	$(Q)$(kecho) "  GEN     linux.pot"
	$(Q)msguniq --sort-by-file --to-code=UTF-8 $(obj)/config.pot \
	    --output $(obj)/linux.pot
	$(Q)rm -f $(obj)/config.pot

scripts/kconfig/mconf: FORCE scripts/kconfig/mconf.o scripts/kconfig/zconf.tab.o scripts/kconfig/lxdialog/checklist.o scripts/kconfig/lxdialog/util.o scripts/kconfig/lxdialog/inputbox.o scripts/kconfig/lxdialog/textbox.o scripts/kconfig/lxdialog/yesno.o scripts/kconfig/lxdialog/menubox.o
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'scripts/Makefile.host', line 108):
	$(call if_changed,host-cmulti)

# Not a target:
scripts/kconfig/dsdt.asl:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

listnewconfig: scripts/kconfig/conf
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'scripts/kconfig/Makefile', line 95):
	$< $(silent) --$@ $(Kconfig)

scripts/kconfig/nconf: FORCE scripts/kconfig/nconf.o scripts/kconfig/zconf.tab.o scripts/kconfig/nconf.gui.o
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'scripts/Makefile.host', line 108):
	$(call if_changed,host-cmulti)

scripts/kconfig/mconf.o: scripts/kconfig/mconf.c FORCE
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: 'mconf'
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'scripts/Makefile.host', line 116):
	$(call if_changed_dep,host-cobjs)

scripts/kconfig/lxdialog/checklist.o: scripts/kconfig/lxdialog/checklist.c FORCE scripts/kconfig/dochecklxdialog
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: 'lxdialog/checklist'
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'scripts/Makefile.host', line 116):
	$(call if_changed_dep,host-cobjs)

__build: scripts/kconfig/dochecklxdialog
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'scripts/Makefile.build', line 119):
	@:

scripts/kconfig/nconf.o: scripts/kconfig/nconf.c FORCE
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: 'nconf'
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'scripts/Makefile.host', line 116):
	$(call if_changed_dep,host-cobjs)

# Not a target:
scripts/Makefile.lib:
#  Implicit rule search has been done.
#  Last modified 2022-10-20 00:04:21.174114669
#  File has been updated.
#  Successfully updated.

scripts/kconfig/modules.order: FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'scripts/Makefile.build', line 375):
	$(Q)(cat /dev/null; $(modorder-cmds)) > $@

# Not a target:
scripts/Makefile.build:
#  Implicit rule search has been done.
#  Last modified 2022-10-20 00:04:21.174114669
#  File has been updated.
#  Successfully updated.

scripts/kconfig/zconf.lex.c: scripts/kconfig/zconf.lex.c_shipped
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'zconf.lex.c'
#  Last modified 2023-03-04 20:58:11.069502481
#  File has been updated.
#  Successfully updated.
# automatic
# @ := scripts/kconfig/zconf.lex.c
# automatic
# % := 
# automatic
# * := zconf.lex.c
# automatic
# + := scripts/kconfig/zconf.lex.c_shipped
# automatic
# | := 
# automatic
# < := scripts/kconfig/zconf.lex.c_shipped
# automatic
# ^ := scripts/kconfig/zconf.lex.c_shipped
# automatic
# ? := scripts/kconfig/zconf.lex.c_shipped
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=1/30=3%
#  recipe to execute (from 'scripts/Makefile.lib', line 255):
	$(call cmd,shipped)

randconfig: scripts/kconfig/conf
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'scripts/kconfig/Makefile', line 95):
	$< $(silent) --$@ $(Kconfig)

scripts/kconfig/qconf: FORCE scripts/kconfig/zconf.tab.o scripts/kconfig/qconf.o
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'scripts/Makefile.host', line 126):
	$(call if_changed,host-cxxmulti)

scripts/kconfig/qconf.o: scripts/kconfig/qconf.cc FORCE scripts/kconfig/.tmp_qtcheck scripts/kconfig/qconf.moc
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: 'qconf'
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'scripts/Makefile.host', line 133):
	$(call if_changed_dep,host-cxxobjs)

# Not a target:
include/config/auto.conf:
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Failed to be updated.

menuconfig: scripts/kconfig/mconf
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'scripts/kconfig/Makefile', line 37):
	$< $(silent) $(Kconfig)

# Not a target:
scripts/kconfig/%-asn1.c:
#  Precious file (prerequisite of .PRECIOUS).
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
scripts/Kbuild.include:
#  Implicit rule search has been done.
#  Last modified 2022-10-20 00:04:21.174114669
#  File has been updated.
#  Successfully updated.

savedefconfig: scripts/kconfig/conf
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'scripts/kconfig/Makefile', line 105):
	$< $(silent) --$@=defconfig $(Kconfig)

# Not a target:
scripts/kconfig/gconf.c:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

gconfig: scripts/kconfig/gconf
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'scripts/kconfig/Makefile', line 34):
	$< $(silent) $(Kconfig)

# Not a target:
scripts/kconfig/.tmp_gtkcheck:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
arch/arm/lib/:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
scripts/kconfig/qconf.cc:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

nconfig: scripts/kconfig/nconf
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'scripts/kconfig/Makefile', line 43):
	$< $(silent) $(Kconfig)

allnoconfig: scripts/kconfig/conf
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'scripts/kconfig/Makefile', line 95):
	$< $(silent) --$@ $(Kconfig)

# Not a target:
scripts/kconfig/lxdialog/textbox.c:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
scripts/kconfig/helloworld.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
include/autoconf.mk:
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Failed to be updated.

scripts/kconfig/lxdialog/menubox.o: scripts/kconfig/lxdialog/menubox.c FORCE scripts/kconfig/dochecklxdialog
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: 'lxdialog/menubox'
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'scripts/Makefile.host', line 116):
	$(call if_changed_dep,host-cobjs)

# files hash-table stats:
# Load=95/1024=9%, Rehash=0, Collisions=8/273=3%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 188 / storage = 3612 B / avg = 19 B
# current buf: size = 8162 B / used = 3612 B / count = 188 / avg = 19 B

# strcache performance: lookups = 393 / hit rate = 52%
# hash-table stats:
# Load=188/8192=2%, Rehash=0, Collisions=1/393=0%
# Finished Make data base on Sat Mar  4 20:58:12 2023

# GNU Make 4.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2014 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Sat Mar  4 20:58:12 2023

# Variables

# makefile (from 'scripts/Kbuild.include', line 75)
cc-cross-prefix = $(word 1, $(foreach c,$(1), $(shell set -e; if (which $(strip $(c))$(CC)) > /dev/null 2>&1 ; then echo $(c); fi)))
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# default
.SHELLFLAGS := -c
# makefile (from 'Makefile', line 300)
KBUILD_MODULES := 
# makefile (from 'Makefile', line 6)
PATCHLEVEL = 03
# makefile (from 'scripts/Kbuild.include', line 54)
filechk = 	$(Q)set -e; $(kecho) '  CHK     $@'; mkdir -p $(dir $@); $(filechk_$(1)) < $< > $@.tmp; if [ -r $@ ] && cmp -s $@ $@.tmp; then rm -f $@.tmp; else $(kecho) '  UPD     $@'; mv -f $@.tmp $@; fi
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from 'Makefile', line 353)
CHECK = sparse
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# default
MAKE_VERSION := 4.1
# makefile (from 'Makefile', line 376)
UBOOTINCLUDE := 
# makefile
CURDIR := /home/book/100ask_imx6ull-sdk/Uboot-2017.03
# makefile (from 'scripts/Kbuild.include', line 169)
ld-version = $(shell $(LD) --version | $(srctree)/scripts/ld-version.sh)
# makefile
SHELL = /bin/sh
# makefile (from 'Makefile', line 85)
Q = @
# makefile (from 'Makefile', line 1665)
PHONY := _all all scripts_basic outputmakefile checkstack ubootrelease ubootversion FORCE
# makefile (from 'Makefile', line 382)
MODVERDIR := .tmp_versions
# environment
_ = /usr/bin/make
# makefile (from 'scripts/Kbuild.include', line 325)
SPL_ := 
# makefile (from 'scripts/Kbuild.include', line 141)
cc-fullversion = $(shell $(CONFIG_SHELL) $(srctree)/scripts/gcc-version.sh -p $(CC))
# makefile (from 'Makefile', line 370)
BOARDDIR := 
# makefile (from 'scripts/Kbuild.include', line 1)
MAKEFILE_LIST :=  Makefile scripts/Kbuild.include
# makefile (from 'Makefile', line 355)
CHECKFLAGS := -D__linux__ -Dlinux -D__STDC__ -Dunix -D__unix__ -Wbitwise -Wno-return-void -D__CHECK_ENDIAN__ 
# 'override' directive
GNUMAKEFLAGS := 
# makefile (from 'Makefile', line 205)
srctree := .
# makefile (from 'Makefile', line 257)
HOSTCC = cc
# environment
XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
# makefile (from 'Makefile', line 360)
KBUILD_CFLAGS := -Wall -Wstrict-prototypes -Wno-format-security -fno-builtin -ffreestanding
# makefile (from 'scripts/Kbuild.include', line 138)
cc-version = $(shell $(CONFIG_SHELL) $(srctree)/scripts/gcc-version.sh $(CC))
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1001/bus
# makefile (from 'Makefile', line 5)
VERSION = 2017
# makefile (from 'Makefile', line 424)
timestamp_h := include/generated/timestamp_autogenerated.h
# makefile (from 'Makefile', line 341)
CC = $(CROSS_COMPILE)gcc
# makefile (from 'Makefile', line 432)
dot-config := 1
# makefile (from 'Makefile', line 1648)
cmd_rmdirs = rm -rf $(rm-dirs)
# makefile (from 'Makefile', line 24)
LC_COLLATE = C
# makefile (from 'Makefile', line 349)
AWK = awk
# makefile (from 'Makefile', line 363)
KBUILD_AFLAGS := -D__ASSEMBLY__
# makefile (from 'scripts/Kbuild.include', line 13)
dot-target = $(dir $@).$(notdir $@)
# makefile (from 'scripts/Kbuild.include', line 278)
if_changed_rule = $(if $(strip $(any-prereq) $(arg-check) ), @set -e; $(rule_$(1)))
# makefile (from 'scripts/Kbuild.include', line 7)
squote := '
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# makefile (from 'Makefile', line 342)
CPP = $(CC) -E
# makefile (from 'scripts/Kbuild.include', line 120)
cc-option-yn = $(call try-run, $(CC) -Werror $(KBUILD_CPPFLAGS) $(KBUILD_CFLAGS) $(1) -c -x c /dev/null -o "$$TMP",y,n)
# environment
SSH_CONNECTION = 192.168.37.1 57533 192.168.37.134 22
# environment
PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/book/100ask_imx6ull-sdk/ToolChain/arm-buildroot-linux-gnueabihf_sdk-buildroot/bin
# makefile (from 'scripts/Kbuild.include', line 218)
flags = $(foreach o,$($(1)),$(if $(filter -I%,$(o)),$(call addtree,$(o)),$(o)))
# makefile (from 'Makefile', line 337)
LD = $(CROSS_COMPILE)ld.bfd
# makefile (from 'Makefile', line 370)
CPUDIR := 
# makefile (from 'scripts/Kbuild.include', line 204)
clean := -f ./scripts/Makefile.clean obj
# makefile (from 'Makefile', line 371)
HOSTLDFLAGS := 
# makefile (from 'Makefile', line 376)
NOSTDINC_FLAGS := 
# makefile (from 'scripts/Kbuild.include', line 9)
space := $(subst ,, )
# environment
SSH_TTY = /dev/pts/1
# environment
XDG_RUNTIME_DIR = /run/user/1001
# makefile (from 'scripts/Kbuild.include', line 210)
hdr-inst := -f ./scripts/Makefile.headersinst obj
# makefile (from 'Makefile', line 370)
VENDOR := 
# makefile (from 'scripts/Kbuild.include', line 90)
try-run = $(shell set -e; TMP="$(TMPOUT).$$$$.tmp"; TMPO="$(TMPOUT).$$$$.o"; TMPSU="$(TMPOUT).$$$$.su"; if ($(1)) >/dev/null 2>&1; then echo "$(2)"; else echo "$(3)"; fi; rm -f "$$TMP" "$$TMPO" "$$TMPSU")
# makefile (from 'scripts/Kbuild.include', line 5)
comma := ,
# makefile (from 'scripts/Kbuild.include', line 258)
any-prereq = $(filter-out $(PHONY),$?) $(filter-out $(PHONY) $(wildcard $^),$^)
# makefile (from 'Makefile', line 301)
KBUILD_BUILTIN := 1
# makefile (from 'Makefile', line 1651)
cmd_rmfiles = rm -f $(rm-files)
# makefile (from 'Makefile', line 423)
version_h := include/generated/version_autogenerated.h
# makefile (from 'Makefile', line 218)
VPATH := .
# makefile (from 'scripts/Kbuild.include', line 8)
empty := 
# makefile (from 'Makefile', line 343)
AR = $(CROSS_COMPILE)ar
# makefile (from 'Makefile', line 1655)
targets := 
# makefile (from 'Makefile', line 25)
LC_NUMERIC = C
# makefile (from 'scripts/Kbuild.include', line 165)
ar-option = $(call try-run, $(AR) rc$(1) "$$TMP",$(1),$(2))
# makefile (from 'Makefile', line 376)
LDFLAGS := 
# makefile (from 'scripts/Kbuild.include', line 186)
build := -f ./scripts/Makefile.build obj
# makefile (from 'Makefile', line 8)
EXTRAVERSION = 
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# makefile (from 'Makefile', line 223)
CDPATH := 
# makefile (from 'Makefile', line 214)
objtree := .
# makefile (from 'scripts/Kbuild.include', line 130)
cc-disable-warning = $(call try-run, $(CC) $(KBUILD_CPPFLAGS) $(KBUILD_CFLAGS) -W$(strip $(1)) -c -x c /dev/null -o "$$TMP",-Wno-$(strip $(1)))
# environment
LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
# makefile (from 'Makefile', line 442)
config-targets := 1
# makefile (from 'Makefile', line 7)
SUBLEVEL = 
# automatic
%F = $(notdir $%)
# environment
DISPLAY = localhost:10.0
# makefile (from 'Makefile', line 249)
KCONFIG_CONFIG = .config
# makefile (from 'Makefile', line 426)
no-dot-config-targets := clean clobber mrproper distclean help %docs check% coccicheck ubootversion backup tests
# makefile (from 'Makefile', line 258)
HOSTCXX = c++
# environment
PWD = /home/book/100ask_imx6ull-sdk/Uboot-2017.03
# makefile (from 'scripts/Kbuild.include', line 154)
cc-ldoption = $(call try-run, $(CC) $(1) -nostdlib -x c /dev/null -o "$$TMP",$(1),$(2))
# makefile (from 'scripts/Kbuild.include', line 177)
dtc-option = $(call try-run, echo '/dts-v1/; / {};' | $(DTC) $(1),$(1),$(2))
# makefile (from 'Makefile', line 376)
OBJCOPYFLAGS := 
# makefile (from 'Makefile', line 215)
src := .
# automatic
*D = $(patsubst %/,%,$(dir $*))
# makefile (from 'Makefile', line 431)
mixed-targets := 0
# makefile (from 'Makefile', line 351)
PYTHON = python
# environment
HOME = /home/book
# makefile (from 'Makefile', line 366)
UBOOTRELEASE = $(shell cat include/config/uboot.release 2> /dev/null)
# makefile (from 'scripts/Kbuild.include', line 109)
as-instr = $(call try-run, printf "%b\n" "$(1)" | $(CC) $(KBUILD_AFLAGS) -c -x assembler -o "$$TMP" -,$(2),$(3))
# makefile (from 'scripts/Kbuild.include', line 192)
modbuiltin := -f ./scripts/Makefile.modbuiltin obj
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# makefile (from 'scripts/Kbuild.include', line 135)
cc-name = $(shell $(CC) -v 2>&1 | grep -q "clang version" && echo clang || echo gcc)
# environment
LOGNAME = book
# makefile (from 'scripts/Kbuild.include', line 149)
binutils-version = $(shell $(CONFIG_SHELL) $(srctree)/scripts/binutils-version.sh $(AS))
# makefile (from 'scripts/Kbuild.include', line 125)
cc-option-align = $(subst -functions=0,, $(call cc-option,-falign-functions=0,-malign-functions=0))
# makefile (from 'Makefile', line 345)
LDR = $(CROSS_COMPILE)ldr
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from 'Makefile', line 77)
KBUILD_VERBOSE = 0
# makefile (from 'Makefile', line 216)
obj := .
# environment
MAKELEVEL := 0
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := mx6ull_14x14_evk_defconfig
# environment
SHLVL = 1
# makefile (from 'Makefile', line 471)
KBUILD_DEFCONFIG := sandbox_defconfig
# makefile (from 'scripts/Kbuild.include', line 36)
silent_kecho := :
# makefile (from 'Makefile', line 344)
NM = $(CROSS_COMPILE)nm
# makefile (from 'Makefile', line 334)
AS = $(CROSS_COMPILE)as
# makefile (from 'Makefile', line 374)
DTC_FLAGS := 
# environment
XDG_SESSION_ID = 64
# environment
USER = book
# makefile
.DEFAULT_GOAL := _all
# makefile (from 'scripts/Kbuild.include', line 268)
if_changed_dep = $(if $(strip $(any-prereq) $(arg-check) ), @set -e; $(echo-cmd) $(cmd_$(1)); scripts/basic/fixdep $(depfile) $@ '$(make-cmd)' > $(dot-target).tmp; rm -f $(depfile); mv -f $(dot-target).tmp $(dot-target).cmd)
# makefile (from 'Makefile', line 9)
NAME = 
# makefile (from 'Makefile', line 389)
RCS_TAR_IGNORE := --exclude SCCS --exclude BitKeeper --exclude .svn --exclude CVS --exclude .pc --exclude .hg --exclude .git
# makefile (from 'Makefile', line 1606)
build-dir = $(patsubst %/,%,$(dir $@))
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from 'Makefile', line 370)
CPU := 
# makefile (from 'scripts/Kbuild.include', line 159)
ld-option = $(call try-run, $(CC) -x c /dev/null -c -o "$$TMPO" ; $(LD) $(1) "$$TMPO" -o "$$TMP",$(1),$(2))
# makefile (from 'Makefile', line 259)
HOSTCFLAGS = -Wall -Wstrict-prototypes -O2 -fomit-frame-pointer $(if $(CONFIG_TOOLS_DEBUG),-g)
# default
MAKE_COMMAND := make
# environment
OLDPWD = /home/book/100ask_imx6ull-sdk
# makefile (from 'Makefile', line 370)
SOC := 
# default
.VARIABLES := 
# makefile (from 'scripts/Kbuild.include', line 222)
echo-cmd = $(if $($(quiet)cmd_$(1)), echo '  $(call escsq,$($(quiet)cmd_$(1)))$(echo-why)';)
# automatic
*F = $(notdir $*)
# makefile (from 'scripts/Kbuild.include', line 18)
depfile = $(subst $(comma),_,$(dot-target).d)
# makefile (from 'Makefile', line 472)
KBUILD_KCONFIG := 
# makefile (from 'scripts/Kbuild.include', line 173)
ld-ifversion = $(shell [ $(ld-version) $(1) $(2) ] && echo $(3) || echo $(4))
# makefile (from 'scripts/Kbuild.include', line 254)
make-cmd = $(call escsq,$(subst #,\#,$(subst $$,$$$$,$(cmd_$(1)))))
# environment
ARCH = arm
# makefile
MAKEFLAGS = prR -I/home/book/100ask_imx6ull-sdk/Uboot-2017.03 --no-print-directory
# makefile (from 'scripts/Kbuild.include', line 26)
baseprereq = $(basename $(notdir $<))
# environment
MFLAGS = -prR -I/home/book/100ask_imx6ull-sdk/Uboot-2017.03 --no-print-directory
# environment
SSH_CLIENT = 192.168.37.1 57533 22
# makefile (from 'scripts/Kbuild.include', line 103)
as-option = $(call try-run, $(CC) $(KBUILD_CFLAGS) $(1) -c -x assembler /dev/null -o "$$TMP",$(1),$(2))
# environment
MAIL = /var/mail/book
# makefile (from 'Makefile', line 261)
HOSTCXXFLAGS = -O2
# makefile (from 'Makefile', line 84)
quiet = quiet_
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from 'scripts/Kbuild.include', line 115)
cc-option = $(call try-run, $(CC) -Werror $(KBUILD_CPPFLAGS) $(KBUILD_CFLAGS) $(1) -c -x c /dev/null -o "$$TMP",$(1),$(2))
# makefile (from 'Makefile', line 348)
OBJDUMP = $(CROSS_COMPILE)objdump
# automatic
+F = $(notdir $+)
# makefile (from 'scripts/Kbuild.include', line 229)
objectify = $(foreach o,$(1),$(if $(filter /%,$(o)),$(o),$(obj)/$(o)))
# makefile (from 'Makefile', line 370)
BOARD := 
# makefile (from 'Makefile', line 346)
STRIP = $(CROSS_COMPILE)strip
# makefile (from 'Makefile', line 352)
DTC = dtc
# makefile (from 'scripts/Kbuild.include', line 198)
dtbinst := -f scripts/Makefile.dtbinst obj
# environment
CROSS_COMPILE = arm-buildroot-linux-gnueabihf-
# makefile (from 'scripts/Kbuild.include', line 146)
cc-ifversion = $(shell [ $(cc-version) $(1) $(2) ] && echo $(3) || echo $(4))
# makefile (from 'Makefile', line 227)
HOSTARCH := x86_64
# makefile (from 'scripts/Kbuild.include', line 30)
escsq = $(subst $(squote),'\$(squote)',$1)
# makefile (from 'scripts/Kbuild.include', line 226)
cmd = @$(echo-cmd) $(cmd_$(1))
# default
MAKEFILES := 
# makefile (from 'Makefile', line 326)
KBUILD_SRC := 
# makefile (from 'Makefile', line 253)
CONFIG_SHELL := /bin/bash
# automatic
<F = $(notdir $<)
# makefile (from 'Makefile', line 1647)
quiet_cmd_rmdirs = $(if $(wildcard $(rm-dirs)),CLEAN   $(wildcard $(rm-dirs)))
# makefile (from 'Makefile', line 237)
HOSTOS := linux
# makefile (from 'Makefile', line 358)
KBUILD_CPPFLAGS := -D__KERNEL__ -D__UBOOT__
# makefile (from 'Makefile', line 350)
PERL = perl
# makefile (from 'Makefile', line 23)
LC_ALL := 
# makefile (from 'Makefile', line 1650)
quiet_cmd_rmfiles = $(if $(wildcard $(rm-files)),CLEAN   $(wildcard $(rm-files)))
# makefile (from 'scripts/Kbuild.include', line 150)
dtc-version = $(shell $(CONFIG_SHELL) $(srctree)/scripts/dtc-version.sh $(DTC))
# makefile (from 'scripts/Kbuild.include', line 242)
arg-check = $(strip $(filter-out $(cmd_$(1)), $(cmd_$@)) $(filter-out $(cmd_$@),   $(cmd_$(1))) )
# makefile (from 'Makefile', line 1607)
target-dir = $(dir $@)
# makefile (from 'scripts/Kbuild.include', line 35)
quiet_kecho := echo
# makefile (from 'Makefile', line 386)
RCS_FIND_IGNORE := \( -name SCCS -o -name BitKeeper -o -name .svn -o -name CVS -o -name .pc -o -name .hg -o -name .git \) -prune -o
# makefile (from 'scripts/Kbuild.include', line 22)
basetarget = $(basename $(notdir $@))
# automatic
^F = $(notdir $^)
# makefile (from 'Makefile', line 347)
OBJCOPY = $(CROSS_COMPILE)objcopy
# default
SUFFIXES := 
# makefile (from 'scripts/Kbuild.include', line 262)
if_changed = $(if $(strip $(any-prereq) $(arg-check)), @set -e; $(echo-cmd) $(cmd_$(1)); printf '%s\n' 'cmd_$@ := $(make-cmd)' > $(dot-target).cmd)
# makefile (from 'scripts/Kbuild.include', line 214)
addtree = $(if $(patsubst -I%,%,$(1)), $(if $(filter-out -I/%,$(1)),$(patsubst -I%,-I$(srctree)/%,$(1))) $(1))
# makefile (from 'Makefile', line 1656)
cmd_files := 
# makefile (from 'Makefile', line 29)
GREP_OPTIONS := 
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# makefile (from 'Makefile', line 326)
KBUILD_EXTMOD := 
# makefile (from 'Makefile', line 180)
KBUILD_CHECKSRC = 0
# default
.RECIPEPREFIX := 
# default
MAKE_TERMERR := /dev/pts/1
# makefile (from 'scripts/Kbuild.include', line 83)
TMPOUT := 
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
LANG = en_US.UTF-8
# environment
TERM = xterm
# makefile (from 'scripts/Kbuild.include', line 6)
quote := "
# makefile (from 'Makefile', line 367)
UBOOTVERSION = $(VERSION)$(if $(PATCHLEVEL),.$(PATCHLEVEL)$(if $(SUBLEVEL),.$(SUBLEVEL)))$(EXTRAVERSION)
# makefile (from 'scripts/Kbuild.include', line 37)
kecho := echo
# variable set hash-table stats:
# Load=195/1024=19%, Rehash=0, Collisions=91/562=16%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2052, inode 3674673): 37 files, no impossibilities.

# 37 files, no impossibilities in 1 directories.

# Implicit Rules

scripts/basic/%: scripts_basic
#  recipe to execute (from 'Makefile', line 402):
	

%config: scripts_basic outputmakefile FORCE
#  recipe to execute (from 'Makefile', line 478):
	$(Q)$(MAKE) $(build)=scripts/kconfig $@

%.s: %.c prepare scripts FORCE
#  recipe to execute (from 'Makefile', line 1615):
	$(Q)$(MAKE) $(build)=$(build-dir) $(target-dir)$(notdir $@)

%.i: %.c prepare scripts FORCE
#  recipe to execute (from 'Makefile', line 1617):
	$(Q)$(MAKE) $(build)=$(build-dir) $(target-dir)$(notdir $@)

%.o: %.c prepare scripts FORCE
#  recipe to execute (from 'Makefile', line 1619):
	$(Q)$(MAKE) $(build)=$(build-dir) $(target-dir)$(notdir $@)

%.lst: %.c prepare scripts FORCE
#  recipe to execute (from 'Makefile', line 1621):
	$(Q)$(MAKE) $(build)=$(build-dir) $(target-dir)$(notdir $@)

%.s: %.S prepare scripts FORCE
#  recipe to execute (from 'Makefile', line 1623):
	$(Q)$(MAKE) $(build)=$(build-dir) $(target-dir)$(notdir $@)

%.o: %.S prepare scripts FORCE
#  recipe to execute (from 'Makefile', line 1625):
	$(Q)$(MAKE) $(build)=$(build-dir) $(target-dir)$(notdir $@)

%.symtypes: %.c prepare scripts FORCE
#  recipe to execute (from 'Makefile', line 1627):
	$(Q)$(MAKE) $(build)=$(build-dir) $(target-dir)$(notdir $@)

%/: prepare scripts FORCE
#  recipe to execute (from 'Makefile', line 1635):
	$(cmd_crmodverdir)
	$(Q)$(MAKE) KBUILD_MODULES=$(if $(CONFIG_MODULES),1) \
	$(build)=$(build-dir)

%.ko: prepare scripts FORCE
#  recipe to execute (from 'Makefile', line 1639):
	$(cmd_crmodverdir)
	$(Q)$(MAKE) KBUILD_MODULES=$(if $(CONFIG_MODULES),1)   \
	$(build)=$(build-dir) $(@:.ko=.o)
	$(Q)$(MAKE) -f $(srctree)/scripts/Makefile.modpost

# 11 implicit rules, 0 (0.0%) terminal.

# Files

ubootversion:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1593):
	@echo $(UBOOTVERSION)

/: prepare scripts FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1631):
	$(cmd_crmodverdir)
	$(Q)$(MAKE) KBUILD_MODULES=$(if $(CONFIG_MODULES),1) \
	$(build)=$(build-dir)

outputmakefile:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Successfully updated.

config: scripts_basic outputmakefile FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 475):
	$(Q)$(MAKE) $(build)=scripts/kconfig $@

FORCE:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Successfully updated.

.PHONY: _all all scripts_basic outputmakefile checkstack ubootrelease ubootversion FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

/home/book/100ask_imx6ull-sdk/Uboot-2017.03/Makefile:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 133):
	

# Not a target:
scripts:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

ubootrelease:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1590):
	@echo "$(UBOOTVERSION)$$($(CONFIG_SHELL) $(srctree)/scripts/setlocalversion $(srctree))"

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

Makefile:
#  Implicit rule search has not been done.
#  Last modified 2022-10-20 00:04:20.682119638
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 133):
	

# Not a target:
prepare:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

all:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

mx6ull_14x14_evk_defconfig: scripts_basic outputmakefile FORCE
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'mx6ull_14x14_evk_def'
#  File does not exist.
#  File has been updated.
#  Successfully updated.
# automatic
# @ := mx6ull_14x14_evk_defconfig
# automatic
# % := 
# automatic
# * := mx6ull_14x14_evk_def
# automatic
# + := scripts_basic outputmakefile FORCE
# automatic
# | := 
# automatic
# < := scripts_basic
# automatic
# ^ := scripts_basic outputmakefile FORCE
# automatic
# ? := scripts_basic outputmakefile FORCE
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=7/69=10%
#  recipe to execute (from 'Makefile', line 478):
	$(Q)$(MAKE) $(build)=scripts/kconfig $@

checkstack:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1586):
	$(OBJDUMP) -d u-boot $$(find . -name u-boot-spl) | \
	$(PERL) $(src)/scripts/checkstack.pl $(ARCH)

scripts/Kbuild.include:
#  Implicit rule search has not been done.
#  Last modified 2022-10-20 00:04:21.174114669
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 329):
	

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

scripts_basic:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Successfully updated.
# automatic
# @ := scripts_basic
# automatic
# % := 
# automatic
# * := 
# automatic
# + := 
# automatic
# | := 
# automatic
# < := 
# automatic
# ^ := 
# automatic
# ? := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=7/40=18%
#  recipe to execute (from 'Makefile', line 398):
	$(Q)$(MAKE) $(build)=scripts/basic
	$(Q)rm -f .tmp_quiet_recordmcount

_all: all
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

# files hash-table stats:
# Load=89/1024=9%, Rehash=0, Collisions=42/175=24%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 139 / storage = 1053 B / avg = 7 B
# current buf: size = 8162 B / used = 1053 B / count = 139 / avg = 7 B

# strcache performance: lookups = 233 / hit rate = 40%
# hash-table stats:
# Load=139/8192=2%, Rehash=0, Collisions=28/233=12%
# Finished Make data base on Sat Mar  4 20:58:12 2023

